Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> declaration
Rule 4     declaration -> USE ID SEMICOLON
Rule 5     declaration -> PACKAGE ID SEMICOLON
Rule 6     declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK
Rule 7     declaration -> statement SEMICOLON
Rule 8     declaration -> command
Rule 9     param_list -> var_type comma_var_type
Rule 10    param_list -> empty
Rule 11    comma_var_type -> comma_var_type COMMA var_type
Rule 12    comma_var_type -> COMMA var_type
Rule 13    comma_var_type -> empty
Rule 14    var_type -> DOLLAR ID
Rule 15    var_type -> AT ID
Rule 16    var_type -> PERCENT ID
Rule 17    assign_type -> ASSIGN
Rule 18    assign_type -> PLUS_ASSIGN
Rule 19    assign_type -> MINUS_ASSIGN
Rule 20    assign_type -> MULTIPLY_ASSIGN
Rule 21    assign_type -> DIVIDE_ASSIGN
Rule 22    assign_type -> MOD_ASSIGN
Rule 23    assign_type -> POW_ASSIGN
Rule 24    statement_list -> statement_list statement SEMICOLON
Rule 25    statement_list -> statement SEMICOLON
Rule 26    statement_list -> empty
Rule 27    statement_list -> statement_list command
Rule 28    statement_list -> command
Rule 29    statement -> var_declaration
Rule 30    statement -> var_assignment
Rule 31    var_declaration -> MY var_type
Rule 32    var_declaration -> MY var_type assign_type expression
Rule 33    var_declaration -> MY LPAREN param_list RPAREN
Rule 34    var_declaration -> MY LPAREN param_list RPAREN assign_type expression
Rule 35    var_declaration -> MY var_type assign_type LPAREN expression_list RPAREN
Rule 36    var_declaration -> MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
Rule 37    var_assignment -> var_type assign_type expression
Rule 38    var_assignment -> var_type LBRACKET expression RBRACKET assign_type expression
Rule 39    var_assignment -> var_type assign_type LPAREN expression_list RPAREN
Rule 40    var_assignment -> LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
Rule 41    statement -> RETURN LPAREN expression_list RPAREN
Rule 42    command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
Rule 43    command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
Rule 44    statement -> PRINT STRING
Rule 45    command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
Rule 46    command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
Rule 47    command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
Rule 48    statement -> ID LPAREN expression_list RPAREN
Rule 49    statement -> AMPERSANT ID LPAREN expression_list RPAREN
Rule 50    expression_list -> expression comma_expression
Rule 51    expression_list -> empty
Rule 52    comma_expression -> comma_expression COMMA expression
Rule 53    comma_expression -> COMMA expression
Rule 54    comma_expression -> empty
Rule 55    expression -> expression PLUS expression
Rule 56    expression -> expression MINUS expression
Rule 57    expression -> expression TIMES expression
Rule 58    expression -> expression DIVIDE expression
Rule 59    expression -> expression MODULUS expression
Rule 60    expression -> INTEGER
Rule 61    expression -> HEX
Rule 62    expression -> FLOAT
Rule 63    expression -> STRING
Rule 64    expression -> LPAREN expression RPAREN
Rule 65    expression -> ID LPAREN expression_list RPAREN
Rule 66    expression -> DOLLAR ID LBRACKET expression RBRACKET
Rule 67    expression -> var_type
Rule 68    expression -> MINUS expression
Rule 69    expression -> PLUS expression
Rule 70    relop -> relop_number
Rule 71    relop -> relop_string
Rule 72    relop_number -> expression ISEQUAL expression
Rule 73    relop_number -> expression NOTEQUAL expression
Rule 74    relop_number -> expression GREATER expression
Rule 75    relop_number -> expression GREATEREQUAL expression
Rule 76    relop_number -> expression LESS expression
Rule 77    relop_number -> expression LESSEQUAL expression
Rule 78    relop_number -> expression COMP expression
Rule 79    relop -> relop AND relop
Rule 80    relop -> relop OR relop
Rule 81    relop -> NOT relop
Rule 82    relop_string -> expression ISEQUAL_STRING expression
Rule 83    relop_string -> expression NOTEQUAL_STRING expression
Rule 84    relop_string -> expression GREATER_STRING expression
Rule 85    relop_string -> expression GREATEREQUAL_STRING expression
Rule 86    relop_string -> expression LESS_STRING expression
Rule 87    relop_string -> expression LESSEQUAL_STRING expression
Rule 88    relop_string -> expression COMP_STRING expression
Rule 89    empty -> <empty>

Terminals, with rules where they appear

AMPERSANT            : 49
AND                  : 79
ASSIGN               : 17
AT                   : 15
COMMA                : 11 12 52 53
COMP                 : 78
COMP_STRING          : 88
DIVIDE               : 58
DIVIDE_ASSIGN        : 21
DOLLAR               : 14 66
ELSE                 : 43
FLOAT                : 62
FOR                  : 46 47
GREATER              : 74
GREATEREQUAL         : 75
GREATEREQUAL_STRING  : 85
GREATER_STRING       : 84
HEX                  : 61
ID                   : 4 5 6 14 15 16 48 49 65 66
IF                   : 42 43
INTEGER              : 60
ISEQUAL              : 72
ISEQUAL_STRING       : 82
LBLOCK               : 6 42 43 43 45 46 47
LBRACKET             : 38 66
LESS                 : 76
LESSEQUAL            : 77
LESSEQUAL_STRING     : 87
LESS_STRING          : 86
LPAREN               : 6 33 34 35 36 36 39 40 40 41 42 43 45 46 47 48 49 64 65
MINUS                : 56 68
MINUS_ASSIGN         : 19
MODULUS              : 59
MOD_ASSIGN           : 22
MULTIPLY_ASSIGN      : 20
MY                   : 31 32 33 34 35 36
NOT                  : 81
NOTEQUAL             : 73
NOTEQUAL_STRING      : 83
OR                   : 80
PACKAGE              : 5
PERCENT              : 16
PLUS                 : 55 69
PLUS_ASSIGN          : 18
POW_ASSIGN           : 23
PRINT                : 44
RBLOCK               : 6 42 43 43 45 46 47
RBRACKET             : 38 66
RETURN               : 41
RPAREN               : 6 33 34 35 36 36 39 40 40 41 42 43 45 46 47 48 49 64 65
SEMICOLON            : 4 5 7 24 25 46 46 47 47
STRING               : 44 63
SUB                  : 6
TIMES                : 57
USE                  : 4
WHILE                : 45
error                : 

Nonterminals, with rules where they appear

assign_type          : 32 34 35 36 37 38 39 40
comma_expression     : 50 52
comma_var_type       : 9 11
command              : 8 27 28
declaration          : 2 3
declaration_list     : 1 2
empty                : 10 13 26 51 54
expression           : 32 34 37 38 38 50 52 53 55 55 56 56 57 57 58 58 59 59 64 66 68 69 72 72 73 73 74 74 75 75 76 76 77 77 78 78 82 82 83 83 84 84 85 85 86 86 87 87 88 88
expression_list      : 35 36 39 40 41 48 49 65
param_list           : 6 33 34 36 40
program              : 0
relop                : 42 43 45 46 47 79 79 80 80 81
relop_number         : 70
relop_string         : 71
statement            : 7 24 25
statement_list       : 6 24 27 42 43 43 45 46 47
var_assignment       : 30 46 47 47
var_declaration      : 29 46
var_type             : 9 11 12 31 32 35 37 38 39 67

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . declaration
    (4) declaration -> . USE ID SEMICOLON
    (5) declaration -> . PACKAGE ID SEMICOLON
    (6) declaration -> . SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK
    (7) declaration -> . statement SEMICOLON
    (8) declaration -> . command
    (29) statement -> . var_declaration
    (30) statement -> . var_assignment
    (41) statement -> . RETURN LPAREN expression_list RPAREN
    (44) statement -> . PRINT STRING
    (48) statement -> . ID LPAREN expression_list RPAREN
    (49) statement -> . AMPERSANT ID LPAREN expression_list RPAREN
    (42) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (45) command -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (46) command -> . FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> . FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (31) var_declaration -> . MY var_type
    (32) var_declaration -> . MY var_type assign_type expression
    (33) var_declaration -> . MY LPAREN param_list RPAREN
    (34) var_declaration -> . MY LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> . MY var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> . MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    USE             shift and go to state 4
    PACKAGE         shift and go to state 6
    SUB             shift and go to state 7
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 5
    AMPERSANT       shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    MY              shift and go to state 19
    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    statement                      shift and go to state 9
    command                        shift and go to state 10
    var_declaration                shift and go to state 11
    var_assignment                 shift and go to state 12
    var_type                       shift and go to state 20

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . declaration
    (4) declaration -> . USE ID SEMICOLON
    (5) declaration -> . PACKAGE ID SEMICOLON
    (6) declaration -> . SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK
    (7) declaration -> . statement SEMICOLON
    (8) declaration -> . command
    (29) statement -> . var_declaration
    (30) statement -> . var_assignment
    (41) statement -> . RETURN LPAREN expression_list RPAREN
    (44) statement -> . PRINT STRING
    (48) statement -> . ID LPAREN expression_list RPAREN
    (49) statement -> . AMPERSANT ID LPAREN expression_list RPAREN
    (42) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (45) command -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (46) command -> . FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> . FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (31) var_declaration -> . MY var_type
    (32) var_declaration -> . MY var_type assign_type expression
    (33) var_declaration -> . MY LPAREN param_list RPAREN
    (34) var_declaration -> . MY LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> . MY var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> . MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    $end            reduce using rule 1 (program -> declaration_list .)
    USE             shift and go to state 4
    PACKAGE         shift and go to state 6
    SUB             shift and go to state 7
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 5
    AMPERSANT       shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    MY              shift and go to state 19
    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    declaration                    shift and go to state 24
    statement                      shift and go to state 9
    command                        shift and go to state 10
    var_declaration                shift and go to state 11
    var_assignment                 shift and go to state 12
    var_type                       shift and go to state 20

state 3

    (3) declaration_list -> declaration .

    USE             reduce using rule 3 (declaration_list -> declaration .)
    PACKAGE         reduce using rule 3 (declaration_list -> declaration .)
    SUB             reduce using rule 3 (declaration_list -> declaration .)
    RETURN          reduce using rule 3 (declaration_list -> declaration .)
    PRINT           reduce using rule 3 (declaration_list -> declaration .)
    ID              reduce using rule 3 (declaration_list -> declaration .)
    AMPERSANT       reduce using rule 3 (declaration_list -> declaration .)
    IF              reduce using rule 3 (declaration_list -> declaration .)
    WHILE           reduce using rule 3 (declaration_list -> declaration .)
    FOR             reduce using rule 3 (declaration_list -> declaration .)
    MY              reduce using rule 3 (declaration_list -> declaration .)
    LPAREN          reduce using rule 3 (declaration_list -> declaration .)
    DOLLAR          reduce using rule 3 (declaration_list -> declaration .)
    AT              reduce using rule 3 (declaration_list -> declaration .)
    PERCENT         reduce using rule 3 (declaration_list -> declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration .)


state 4

    (4) declaration -> USE . ID SEMICOLON

    ID              shift and go to state 25


state 5

    (48) statement -> ID . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 26


state 6

    (5) declaration -> PACKAGE . ID SEMICOLON

    ID              shift and go to state 27


state 7

    (6) declaration -> SUB . ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK

    ID              shift and go to state 28


state 8

    (40) var_assignment -> LPAREN . param_list RPAREN assign_type LPAREN expression_list RPAREN
    (9) param_list -> . var_type comma_var_type
    (10) param_list -> . empty
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID
    (89) empty -> .

    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23
    RPAREN          reduce using rule 89 (empty -> .)

    param_list                     shift and go to state 29
    var_type                       shift and go to state 30
    empty                          shift and go to state 31

state 9

    (7) declaration -> statement . SEMICOLON

    SEMICOLON       shift and go to state 32


state 10

    (8) declaration -> command .

    USE             reduce using rule 8 (declaration -> command .)
    PACKAGE         reduce using rule 8 (declaration -> command .)
    SUB             reduce using rule 8 (declaration -> command .)
    RETURN          reduce using rule 8 (declaration -> command .)
    PRINT           reduce using rule 8 (declaration -> command .)
    ID              reduce using rule 8 (declaration -> command .)
    AMPERSANT       reduce using rule 8 (declaration -> command .)
    IF              reduce using rule 8 (declaration -> command .)
    WHILE           reduce using rule 8 (declaration -> command .)
    FOR             reduce using rule 8 (declaration -> command .)
    MY              reduce using rule 8 (declaration -> command .)
    LPAREN          reduce using rule 8 (declaration -> command .)
    DOLLAR          reduce using rule 8 (declaration -> command .)
    AT              reduce using rule 8 (declaration -> command .)
    PERCENT         reduce using rule 8 (declaration -> command .)
    $end            reduce using rule 8 (declaration -> command .)


state 11

    (29) statement -> var_declaration .

    SEMICOLON       reduce using rule 29 (statement -> var_declaration .)


state 12

    (30) statement -> var_assignment .

    SEMICOLON       reduce using rule 30 (statement -> var_assignment .)


state 13

    (41) statement -> RETURN . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 33


state 14

    (44) statement -> PRINT . STRING

    STRING          shift and go to state 34


state 15

    (49) statement -> AMPERSANT . ID LPAREN expression_list RPAREN

    ID              shift and go to state 35


state 16

    (42) command -> IF . LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> IF . LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK

    LPAREN          shift and go to state 36


state 17

    (45) command -> WHILE . LPAREN relop RPAREN LBLOCK statement_list RBLOCK

    LPAREN          shift and go to state 37


state 18

    (46) command -> FOR . LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> FOR . LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK

    LPAREN          shift and go to state 38


state 19

    (31) var_declaration -> MY . var_type
    (32) var_declaration -> MY . var_type assign_type expression
    (33) var_declaration -> MY . LPAREN param_list RPAREN
    (34) var_declaration -> MY . LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> MY . var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> MY . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    LPAREN          shift and go to state 40
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    var_type                       shift and go to state 39

state 20

    (37) var_assignment -> var_type . assign_type expression
    (38) var_assignment -> var_type . LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> var_type . assign_type LPAREN expression_list RPAREN
    (17) assign_type -> . ASSIGN
    (18) assign_type -> . PLUS_ASSIGN
    (19) assign_type -> . MINUS_ASSIGN
    (20) assign_type -> . MULTIPLY_ASSIGN
    (21) assign_type -> . DIVIDE_ASSIGN
    (22) assign_type -> . MOD_ASSIGN
    (23) assign_type -> . POW_ASSIGN

    LBRACKET        shift and go to state 42
    ASSIGN          shift and go to state 43
    PLUS_ASSIGN     shift and go to state 44
    MINUS_ASSIGN    shift and go to state 45
    MULTIPLY_ASSIGN shift and go to state 46
    DIVIDE_ASSIGN   shift and go to state 47
    MOD_ASSIGN      shift and go to state 48
    POW_ASSIGN      shift and go to state 49

    assign_type                    shift and go to state 41

state 21

    (14) var_type -> DOLLAR . ID

    ID              shift and go to state 50


state 22

    (15) var_type -> AT . ID

    ID              shift and go to state 51


state 23

    (16) var_type -> PERCENT . ID

    ID              shift and go to state 52


state 24

    (2) declaration_list -> declaration_list declaration .

    USE             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    PACKAGE         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    SUB             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    RETURN          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    PRINT           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    ID              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    AMPERSANT       reduce using rule 2 (declaration_list -> declaration_list declaration .)
    IF              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    WHILE           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FOR             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    MY              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    LPAREN          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    DOLLAR          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    AT              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    PERCENT         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 25

    (4) declaration -> USE ID . SEMICOLON

    SEMICOLON       shift and go to state 53


state 26

    (48) statement -> ID LPAREN . expression_list RPAREN
    (50) expression_list -> . expression comma_expression
    (51) expression_list -> . empty
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (89) empty -> .
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    RPAREN          reduce using rule 89 (empty -> .)
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression_list                shift and go to state 56
    expression                     shift and go to state 57
    empty                          shift and go to state 58
    var_type                       shift and go to state 66

state 27

    (5) declaration -> PACKAGE ID . SEMICOLON

    SEMICOLON       shift and go to state 67


state 28

    (6) declaration -> SUB ID . LPAREN param_list RPAREN LBLOCK statement_list RBLOCK

    LPAREN          shift and go to state 68


state 29

    (40) var_assignment -> LPAREN param_list . RPAREN assign_type LPAREN expression_list RPAREN

    RPAREN          shift and go to state 69


state 30

    (9) param_list -> var_type . comma_var_type
    (11) comma_var_type -> . comma_var_type COMMA var_type
    (12) comma_var_type -> . COMMA var_type
    (13) comma_var_type -> . empty
    (89) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 71
    RPAREN          reduce using rule 89 (empty -> .)

  ! COMMA           [ reduce using rule 89 (empty -> .) ]

    comma_var_type                 shift and go to state 70
    empty                          shift and go to state 72

state 31

    (10) param_list -> empty .

    RPAREN          reduce using rule 10 (param_list -> empty .)


state 32

    (7) declaration -> statement SEMICOLON .

    USE             reduce using rule 7 (declaration -> statement SEMICOLON .)
    PACKAGE         reduce using rule 7 (declaration -> statement SEMICOLON .)
    SUB             reduce using rule 7 (declaration -> statement SEMICOLON .)
    RETURN          reduce using rule 7 (declaration -> statement SEMICOLON .)
    PRINT           reduce using rule 7 (declaration -> statement SEMICOLON .)
    ID              reduce using rule 7 (declaration -> statement SEMICOLON .)
    AMPERSANT       reduce using rule 7 (declaration -> statement SEMICOLON .)
    IF              reduce using rule 7 (declaration -> statement SEMICOLON .)
    WHILE           reduce using rule 7 (declaration -> statement SEMICOLON .)
    FOR             reduce using rule 7 (declaration -> statement SEMICOLON .)
    MY              reduce using rule 7 (declaration -> statement SEMICOLON .)
    LPAREN          reduce using rule 7 (declaration -> statement SEMICOLON .)
    DOLLAR          reduce using rule 7 (declaration -> statement SEMICOLON .)
    AT              reduce using rule 7 (declaration -> statement SEMICOLON .)
    PERCENT         reduce using rule 7 (declaration -> statement SEMICOLON .)
    $end            reduce using rule 7 (declaration -> statement SEMICOLON .)


state 33

    (41) statement -> RETURN LPAREN . expression_list RPAREN
    (50) expression_list -> . expression comma_expression
    (51) expression_list -> . empty
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (89) empty -> .
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    RPAREN          reduce using rule 89 (empty -> .)
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression_list                shift and go to state 73
    expression                     shift and go to state 57
    empty                          shift and go to state 58
    var_type                       shift and go to state 66

state 34

    (44) statement -> PRINT STRING .

    SEMICOLON       reduce using rule 44 (statement -> PRINT STRING .)


state 35

    (49) statement -> AMPERSANT ID . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 74


state 36

    (42) command -> IF LPAREN . relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> IF LPAREN . relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (70) relop -> . relop_number
    (71) relop -> . relop_string
    (79) relop -> . relop AND relop
    (80) relop -> . relop OR relop
    (81) relop -> . NOT relop
    (72) relop_number -> . expression ISEQUAL expression
    (73) relop_number -> . expression NOTEQUAL expression
    (74) relop_number -> . expression GREATER expression
    (75) relop_number -> . expression GREATEREQUAL expression
    (76) relop_number -> . expression LESS expression
    (77) relop_number -> . expression LESSEQUAL expression
    (78) relop_number -> . expression COMP expression
    (82) relop_string -> . expression ISEQUAL_STRING expression
    (83) relop_string -> . expression NOTEQUAL_STRING expression
    (84) relop_string -> . expression GREATER_STRING expression
    (85) relop_string -> . expression GREATEREQUAL_STRING expression
    (86) relop_string -> . expression LESS_STRING expression
    (87) relop_string -> . expression LESSEQUAL_STRING expression
    (88) relop_string -> . expression COMP_STRING expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    NOT             shift and go to state 78
    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    relop                          shift and go to state 75
    relop_number                   shift and go to state 76
    relop_string                   shift and go to state 77
    expression                     shift and go to state 79
    var_type                       shift and go to state 66

state 37

    (45) command -> WHILE LPAREN . relop RPAREN LBLOCK statement_list RBLOCK
    (70) relop -> . relop_number
    (71) relop -> . relop_string
    (79) relop -> . relop AND relop
    (80) relop -> . relop OR relop
    (81) relop -> . NOT relop
    (72) relop_number -> . expression ISEQUAL expression
    (73) relop_number -> . expression NOTEQUAL expression
    (74) relop_number -> . expression GREATER expression
    (75) relop_number -> . expression GREATEREQUAL expression
    (76) relop_number -> . expression LESS expression
    (77) relop_number -> . expression LESSEQUAL expression
    (78) relop_number -> . expression COMP expression
    (82) relop_string -> . expression ISEQUAL_STRING expression
    (83) relop_string -> . expression NOTEQUAL_STRING expression
    (84) relop_string -> . expression GREATER_STRING expression
    (85) relop_string -> . expression GREATEREQUAL_STRING expression
    (86) relop_string -> . expression LESS_STRING expression
    (87) relop_string -> . expression LESSEQUAL_STRING expression
    (88) relop_string -> . expression COMP_STRING expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    NOT             shift and go to state 78
    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    relop                          shift and go to state 80
    relop_number                   shift and go to state 76
    relop_string                   shift and go to state 77
    expression                     shift and go to state 79
    var_type                       shift and go to state 66

state 38

    (46) command -> FOR LPAREN . var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> FOR LPAREN . var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (31) var_declaration -> . MY var_type
    (32) var_declaration -> . MY var_type assign_type expression
    (33) var_declaration -> . MY LPAREN param_list RPAREN
    (34) var_declaration -> . MY LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> . MY var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> . MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    MY              shift and go to state 19
    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    var_declaration                shift and go to state 81
    var_assignment                 shift and go to state 82
    var_type                       shift and go to state 20

state 39

    (31) var_declaration -> MY var_type .
    (32) var_declaration -> MY var_type . assign_type expression
    (35) var_declaration -> MY var_type . assign_type LPAREN expression_list RPAREN
    (17) assign_type -> . ASSIGN
    (18) assign_type -> . PLUS_ASSIGN
    (19) assign_type -> . MINUS_ASSIGN
    (20) assign_type -> . MULTIPLY_ASSIGN
    (21) assign_type -> . DIVIDE_ASSIGN
    (22) assign_type -> . MOD_ASSIGN
    (23) assign_type -> . POW_ASSIGN

    SEMICOLON       reduce using rule 31 (var_declaration -> MY var_type .)
    ASSIGN          shift and go to state 43
    PLUS_ASSIGN     shift and go to state 44
    MINUS_ASSIGN    shift and go to state 45
    MULTIPLY_ASSIGN shift and go to state 46
    DIVIDE_ASSIGN   shift and go to state 47
    MOD_ASSIGN      shift and go to state 48
    POW_ASSIGN      shift and go to state 49

    assign_type                    shift and go to state 83

state 40

    (33) var_declaration -> MY LPAREN . param_list RPAREN
    (34) var_declaration -> MY LPAREN . param_list RPAREN assign_type expression
    (36) var_declaration -> MY LPAREN . param_list RPAREN assign_type LPAREN expression_list RPAREN
    (9) param_list -> . var_type comma_var_type
    (10) param_list -> . empty
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID
    (89) empty -> .

    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23
    RPAREN          reduce using rule 89 (empty -> .)

    param_list                     shift and go to state 84
    var_type                       shift and go to state 30
    empty                          shift and go to state 31

state 41

    (37) var_assignment -> var_type assign_type . expression
    (39) var_assignment -> var_type assign_type . LPAREN expression_list RPAREN
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    LPAREN          shift and go to state 86
    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    var_type                       shift and go to state 66
    expression                     shift and go to state 85

state 42

    (38) var_assignment -> var_type LBRACKET . expression RBRACKET assign_type expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    var_type                       shift and go to state 66
    expression                     shift and go to state 87

state 43

    (17) assign_type -> ASSIGN .

    LPAREN          reduce using rule 17 (assign_type -> ASSIGN .)
    INTEGER         reduce using rule 17 (assign_type -> ASSIGN .)
    HEX             reduce using rule 17 (assign_type -> ASSIGN .)
    FLOAT           reduce using rule 17 (assign_type -> ASSIGN .)
    STRING          reduce using rule 17 (assign_type -> ASSIGN .)
    ID              reduce using rule 17 (assign_type -> ASSIGN .)
    DOLLAR          reduce using rule 17 (assign_type -> ASSIGN .)
    MINUS           reduce using rule 17 (assign_type -> ASSIGN .)
    PLUS            reduce using rule 17 (assign_type -> ASSIGN .)
    AT              reduce using rule 17 (assign_type -> ASSIGN .)
    PERCENT         reduce using rule 17 (assign_type -> ASSIGN .)


state 44

    (18) assign_type -> PLUS_ASSIGN .

    LPAREN          reduce using rule 18 (assign_type -> PLUS_ASSIGN .)
    INTEGER         reduce using rule 18 (assign_type -> PLUS_ASSIGN .)
    HEX             reduce using rule 18 (assign_type -> PLUS_ASSIGN .)
    FLOAT           reduce using rule 18 (assign_type -> PLUS_ASSIGN .)
    STRING          reduce using rule 18 (assign_type -> PLUS_ASSIGN .)
    ID              reduce using rule 18 (assign_type -> PLUS_ASSIGN .)
    DOLLAR          reduce using rule 18 (assign_type -> PLUS_ASSIGN .)
    MINUS           reduce using rule 18 (assign_type -> PLUS_ASSIGN .)
    PLUS            reduce using rule 18 (assign_type -> PLUS_ASSIGN .)
    AT              reduce using rule 18 (assign_type -> PLUS_ASSIGN .)
    PERCENT         reduce using rule 18 (assign_type -> PLUS_ASSIGN .)


state 45

    (19) assign_type -> MINUS_ASSIGN .

    LPAREN          reduce using rule 19 (assign_type -> MINUS_ASSIGN .)
    INTEGER         reduce using rule 19 (assign_type -> MINUS_ASSIGN .)
    HEX             reduce using rule 19 (assign_type -> MINUS_ASSIGN .)
    FLOAT           reduce using rule 19 (assign_type -> MINUS_ASSIGN .)
    STRING          reduce using rule 19 (assign_type -> MINUS_ASSIGN .)
    ID              reduce using rule 19 (assign_type -> MINUS_ASSIGN .)
    DOLLAR          reduce using rule 19 (assign_type -> MINUS_ASSIGN .)
    MINUS           reduce using rule 19 (assign_type -> MINUS_ASSIGN .)
    PLUS            reduce using rule 19 (assign_type -> MINUS_ASSIGN .)
    AT              reduce using rule 19 (assign_type -> MINUS_ASSIGN .)
    PERCENT         reduce using rule 19 (assign_type -> MINUS_ASSIGN .)


state 46

    (20) assign_type -> MULTIPLY_ASSIGN .

    LPAREN          reduce using rule 20 (assign_type -> MULTIPLY_ASSIGN .)
    INTEGER         reduce using rule 20 (assign_type -> MULTIPLY_ASSIGN .)
    HEX             reduce using rule 20 (assign_type -> MULTIPLY_ASSIGN .)
    FLOAT           reduce using rule 20 (assign_type -> MULTIPLY_ASSIGN .)
    STRING          reduce using rule 20 (assign_type -> MULTIPLY_ASSIGN .)
    ID              reduce using rule 20 (assign_type -> MULTIPLY_ASSIGN .)
    DOLLAR          reduce using rule 20 (assign_type -> MULTIPLY_ASSIGN .)
    MINUS           reduce using rule 20 (assign_type -> MULTIPLY_ASSIGN .)
    PLUS            reduce using rule 20 (assign_type -> MULTIPLY_ASSIGN .)
    AT              reduce using rule 20 (assign_type -> MULTIPLY_ASSIGN .)
    PERCENT         reduce using rule 20 (assign_type -> MULTIPLY_ASSIGN .)


state 47

    (21) assign_type -> DIVIDE_ASSIGN .

    LPAREN          reduce using rule 21 (assign_type -> DIVIDE_ASSIGN .)
    INTEGER         reduce using rule 21 (assign_type -> DIVIDE_ASSIGN .)
    HEX             reduce using rule 21 (assign_type -> DIVIDE_ASSIGN .)
    FLOAT           reduce using rule 21 (assign_type -> DIVIDE_ASSIGN .)
    STRING          reduce using rule 21 (assign_type -> DIVIDE_ASSIGN .)
    ID              reduce using rule 21 (assign_type -> DIVIDE_ASSIGN .)
    DOLLAR          reduce using rule 21 (assign_type -> DIVIDE_ASSIGN .)
    MINUS           reduce using rule 21 (assign_type -> DIVIDE_ASSIGN .)
    PLUS            reduce using rule 21 (assign_type -> DIVIDE_ASSIGN .)
    AT              reduce using rule 21 (assign_type -> DIVIDE_ASSIGN .)
    PERCENT         reduce using rule 21 (assign_type -> DIVIDE_ASSIGN .)


state 48

    (22) assign_type -> MOD_ASSIGN .

    LPAREN          reduce using rule 22 (assign_type -> MOD_ASSIGN .)
    INTEGER         reduce using rule 22 (assign_type -> MOD_ASSIGN .)
    HEX             reduce using rule 22 (assign_type -> MOD_ASSIGN .)
    FLOAT           reduce using rule 22 (assign_type -> MOD_ASSIGN .)
    STRING          reduce using rule 22 (assign_type -> MOD_ASSIGN .)
    ID              reduce using rule 22 (assign_type -> MOD_ASSIGN .)
    DOLLAR          reduce using rule 22 (assign_type -> MOD_ASSIGN .)
    MINUS           reduce using rule 22 (assign_type -> MOD_ASSIGN .)
    PLUS            reduce using rule 22 (assign_type -> MOD_ASSIGN .)
    AT              reduce using rule 22 (assign_type -> MOD_ASSIGN .)
    PERCENT         reduce using rule 22 (assign_type -> MOD_ASSIGN .)


state 49

    (23) assign_type -> POW_ASSIGN .

    LPAREN          reduce using rule 23 (assign_type -> POW_ASSIGN .)
    INTEGER         reduce using rule 23 (assign_type -> POW_ASSIGN .)
    HEX             reduce using rule 23 (assign_type -> POW_ASSIGN .)
    FLOAT           reduce using rule 23 (assign_type -> POW_ASSIGN .)
    STRING          reduce using rule 23 (assign_type -> POW_ASSIGN .)
    ID              reduce using rule 23 (assign_type -> POW_ASSIGN .)
    DOLLAR          reduce using rule 23 (assign_type -> POW_ASSIGN .)
    MINUS           reduce using rule 23 (assign_type -> POW_ASSIGN .)
    PLUS            reduce using rule 23 (assign_type -> POW_ASSIGN .)
    AT              reduce using rule 23 (assign_type -> POW_ASSIGN .)
    PERCENT         reduce using rule 23 (assign_type -> POW_ASSIGN .)


state 50

    (14) var_type -> DOLLAR ID .

    LBRACKET        reduce using rule 14 (var_type -> DOLLAR ID .)
    ASSIGN          reduce using rule 14 (var_type -> DOLLAR ID .)
    PLUS_ASSIGN     reduce using rule 14 (var_type -> DOLLAR ID .)
    MINUS_ASSIGN    reduce using rule 14 (var_type -> DOLLAR ID .)
    MULTIPLY_ASSIGN reduce using rule 14 (var_type -> DOLLAR ID .)
    DIVIDE_ASSIGN   reduce using rule 14 (var_type -> DOLLAR ID .)
    MOD_ASSIGN      reduce using rule 14 (var_type -> DOLLAR ID .)
    POW_ASSIGN      reduce using rule 14 (var_type -> DOLLAR ID .)
    COMMA           reduce using rule 14 (var_type -> DOLLAR ID .)
    RPAREN          reduce using rule 14 (var_type -> DOLLAR ID .)
    SEMICOLON       reduce using rule 14 (var_type -> DOLLAR ID .)


state 51

    (15) var_type -> AT ID .

    LBRACKET        reduce using rule 15 (var_type -> AT ID .)
    ASSIGN          reduce using rule 15 (var_type -> AT ID .)
    PLUS_ASSIGN     reduce using rule 15 (var_type -> AT ID .)
    MINUS_ASSIGN    reduce using rule 15 (var_type -> AT ID .)
    MULTIPLY_ASSIGN reduce using rule 15 (var_type -> AT ID .)
    DIVIDE_ASSIGN   reduce using rule 15 (var_type -> AT ID .)
    MOD_ASSIGN      reduce using rule 15 (var_type -> AT ID .)
    POW_ASSIGN      reduce using rule 15 (var_type -> AT ID .)
    COMMA           reduce using rule 15 (var_type -> AT ID .)
    RPAREN          reduce using rule 15 (var_type -> AT ID .)
    SEMICOLON       reduce using rule 15 (var_type -> AT ID .)
    PLUS            reduce using rule 15 (var_type -> AT ID .)
    MINUS           reduce using rule 15 (var_type -> AT ID .)
    TIMES           reduce using rule 15 (var_type -> AT ID .)
    DIVIDE          reduce using rule 15 (var_type -> AT ID .)
    MODULUS         reduce using rule 15 (var_type -> AT ID .)
    ISEQUAL         reduce using rule 15 (var_type -> AT ID .)
    NOTEQUAL        reduce using rule 15 (var_type -> AT ID .)
    GREATER         reduce using rule 15 (var_type -> AT ID .)
    GREATEREQUAL    reduce using rule 15 (var_type -> AT ID .)
    LESS            reduce using rule 15 (var_type -> AT ID .)
    LESSEQUAL       reduce using rule 15 (var_type -> AT ID .)
    COMP            reduce using rule 15 (var_type -> AT ID .)
    ISEQUAL_STRING  reduce using rule 15 (var_type -> AT ID .)
    NOTEQUAL_STRING reduce using rule 15 (var_type -> AT ID .)
    GREATER_STRING  reduce using rule 15 (var_type -> AT ID .)
    GREATEREQUAL_STRING reduce using rule 15 (var_type -> AT ID .)
    LESS_STRING     reduce using rule 15 (var_type -> AT ID .)
    LESSEQUAL_STRING reduce using rule 15 (var_type -> AT ID .)
    COMP_STRING     reduce using rule 15 (var_type -> AT ID .)
    RBRACKET        reduce using rule 15 (var_type -> AT ID .)
    AND             reduce using rule 15 (var_type -> AT ID .)
    OR              reduce using rule 15 (var_type -> AT ID .)


state 52

    (16) var_type -> PERCENT ID .

    LBRACKET        reduce using rule 16 (var_type -> PERCENT ID .)
    ASSIGN          reduce using rule 16 (var_type -> PERCENT ID .)
    PLUS_ASSIGN     reduce using rule 16 (var_type -> PERCENT ID .)
    MINUS_ASSIGN    reduce using rule 16 (var_type -> PERCENT ID .)
    MULTIPLY_ASSIGN reduce using rule 16 (var_type -> PERCENT ID .)
    DIVIDE_ASSIGN   reduce using rule 16 (var_type -> PERCENT ID .)
    MOD_ASSIGN      reduce using rule 16 (var_type -> PERCENT ID .)
    POW_ASSIGN      reduce using rule 16 (var_type -> PERCENT ID .)
    COMMA           reduce using rule 16 (var_type -> PERCENT ID .)
    RPAREN          reduce using rule 16 (var_type -> PERCENT ID .)
    SEMICOLON       reduce using rule 16 (var_type -> PERCENT ID .)
    PLUS            reduce using rule 16 (var_type -> PERCENT ID .)
    MINUS           reduce using rule 16 (var_type -> PERCENT ID .)
    TIMES           reduce using rule 16 (var_type -> PERCENT ID .)
    DIVIDE          reduce using rule 16 (var_type -> PERCENT ID .)
    MODULUS         reduce using rule 16 (var_type -> PERCENT ID .)
    ISEQUAL         reduce using rule 16 (var_type -> PERCENT ID .)
    NOTEQUAL        reduce using rule 16 (var_type -> PERCENT ID .)
    GREATER         reduce using rule 16 (var_type -> PERCENT ID .)
    GREATEREQUAL    reduce using rule 16 (var_type -> PERCENT ID .)
    LESS            reduce using rule 16 (var_type -> PERCENT ID .)
    LESSEQUAL       reduce using rule 16 (var_type -> PERCENT ID .)
    COMP            reduce using rule 16 (var_type -> PERCENT ID .)
    ISEQUAL_STRING  reduce using rule 16 (var_type -> PERCENT ID .)
    NOTEQUAL_STRING reduce using rule 16 (var_type -> PERCENT ID .)
    GREATER_STRING  reduce using rule 16 (var_type -> PERCENT ID .)
    GREATEREQUAL_STRING reduce using rule 16 (var_type -> PERCENT ID .)
    LESS_STRING     reduce using rule 16 (var_type -> PERCENT ID .)
    LESSEQUAL_STRING reduce using rule 16 (var_type -> PERCENT ID .)
    COMP_STRING     reduce using rule 16 (var_type -> PERCENT ID .)
    RBRACKET        reduce using rule 16 (var_type -> PERCENT ID .)
    AND             reduce using rule 16 (var_type -> PERCENT ID .)
    OR              reduce using rule 16 (var_type -> PERCENT ID .)


state 53

    (4) declaration -> USE ID SEMICOLON .

    USE             reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    PACKAGE         reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    SUB             reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    RETURN          reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    PRINT           reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    ID              reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    AMPERSANT       reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    IF              reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    WHILE           reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    FOR             reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    MY              reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    LPAREN          reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    DOLLAR          reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    AT              reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    PERCENT         reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    $end            reduce using rule 4 (declaration -> USE ID SEMICOLON .)


state 54

    (65) expression -> ID . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 88


state 55

    (64) expression -> LPAREN . expression RPAREN
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 89
    var_type                       shift and go to state 66

state 56

    (48) statement -> ID LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 90


state 57

    (50) expression_list -> expression . comma_expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression
    (52) comma_expression -> . comma_expression COMMA expression
    (53) comma_expression -> . COMMA expression
    (54) comma_expression -> . empty
    (89) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96
    COMMA           shift and go to state 97
    RPAREN          reduce using rule 89 (empty -> .)

  ! COMMA           [ reduce using rule 89 (empty -> .) ]

    comma_expression               shift and go to state 91
    empty                          shift and go to state 98

state 58

    (51) expression_list -> empty .

    RPAREN          reduce using rule 51 (expression_list -> empty .)


state 59

    (69) expression -> PLUS . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 99
    var_type                       shift and go to state 66

state 60

    (68) expression -> MINUS . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 100
    var_type                       shift and go to state 66

state 61

    (60) expression -> INTEGER .

    PLUS            reduce using rule 60 (expression -> INTEGER .)
    MINUS           reduce using rule 60 (expression -> INTEGER .)
    TIMES           reduce using rule 60 (expression -> INTEGER .)
    DIVIDE          reduce using rule 60 (expression -> INTEGER .)
    MODULUS         reduce using rule 60 (expression -> INTEGER .)
    COMMA           reduce using rule 60 (expression -> INTEGER .)
    RPAREN          reduce using rule 60 (expression -> INTEGER .)
    ISEQUAL         reduce using rule 60 (expression -> INTEGER .)
    NOTEQUAL        reduce using rule 60 (expression -> INTEGER .)
    GREATER         reduce using rule 60 (expression -> INTEGER .)
    GREATEREQUAL    reduce using rule 60 (expression -> INTEGER .)
    LESS            reduce using rule 60 (expression -> INTEGER .)
    LESSEQUAL       reduce using rule 60 (expression -> INTEGER .)
    COMP            reduce using rule 60 (expression -> INTEGER .)
    ISEQUAL_STRING  reduce using rule 60 (expression -> INTEGER .)
    NOTEQUAL_STRING reduce using rule 60 (expression -> INTEGER .)
    GREATER_STRING  reduce using rule 60 (expression -> INTEGER .)
    GREATEREQUAL_STRING reduce using rule 60 (expression -> INTEGER .)
    LESS_STRING     reduce using rule 60 (expression -> INTEGER .)
    LESSEQUAL_STRING reduce using rule 60 (expression -> INTEGER .)
    COMP_STRING     reduce using rule 60 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 60 (expression -> INTEGER .)
    RBRACKET        reduce using rule 60 (expression -> INTEGER .)
    AND             reduce using rule 60 (expression -> INTEGER .)
    OR              reduce using rule 60 (expression -> INTEGER .)


state 62

    (61) expression -> HEX .

    PLUS            reduce using rule 61 (expression -> HEX .)
    MINUS           reduce using rule 61 (expression -> HEX .)
    TIMES           reduce using rule 61 (expression -> HEX .)
    DIVIDE          reduce using rule 61 (expression -> HEX .)
    MODULUS         reduce using rule 61 (expression -> HEX .)
    COMMA           reduce using rule 61 (expression -> HEX .)
    RPAREN          reduce using rule 61 (expression -> HEX .)
    ISEQUAL         reduce using rule 61 (expression -> HEX .)
    NOTEQUAL        reduce using rule 61 (expression -> HEX .)
    GREATER         reduce using rule 61 (expression -> HEX .)
    GREATEREQUAL    reduce using rule 61 (expression -> HEX .)
    LESS            reduce using rule 61 (expression -> HEX .)
    LESSEQUAL       reduce using rule 61 (expression -> HEX .)
    COMP            reduce using rule 61 (expression -> HEX .)
    ISEQUAL_STRING  reduce using rule 61 (expression -> HEX .)
    NOTEQUAL_STRING reduce using rule 61 (expression -> HEX .)
    GREATER_STRING  reduce using rule 61 (expression -> HEX .)
    GREATEREQUAL_STRING reduce using rule 61 (expression -> HEX .)
    LESS_STRING     reduce using rule 61 (expression -> HEX .)
    LESSEQUAL_STRING reduce using rule 61 (expression -> HEX .)
    COMP_STRING     reduce using rule 61 (expression -> HEX .)
    SEMICOLON       reduce using rule 61 (expression -> HEX .)
    RBRACKET        reduce using rule 61 (expression -> HEX .)
    AND             reduce using rule 61 (expression -> HEX .)
    OR              reduce using rule 61 (expression -> HEX .)


state 63

    (62) expression -> FLOAT .

    PLUS            reduce using rule 62 (expression -> FLOAT .)
    MINUS           reduce using rule 62 (expression -> FLOAT .)
    TIMES           reduce using rule 62 (expression -> FLOAT .)
    DIVIDE          reduce using rule 62 (expression -> FLOAT .)
    MODULUS         reduce using rule 62 (expression -> FLOAT .)
    COMMA           reduce using rule 62 (expression -> FLOAT .)
    RPAREN          reduce using rule 62 (expression -> FLOAT .)
    ISEQUAL         reduce using rule 62 (expression -> FLOAT .)
    NOTEQUAL        reduce using rule 62 (expression -> FLOAT .)
    GREATER         reduce using rule 62 (expression -> FLOAT .)
    GREATEREQUAL    reduce using rule 62 (expression -> FLOAT .)
    LESS            reduce using rule 62 (expression -> FLOAT .)
    LESSEQUAL       reduce using rule 62 (expression -> FLOAT .)
    COMP            reduce using rule 62 (expression -> FLOAT .)
    ISEQUAL_STRING  reduce using rule 62 (expression -> FLOAT .)
    NOTEQUAL_STRING reduce using rule 62 (expression -> FLOAT .)
    GREATER_STRING  reduce using rule 62 (expression -> FLOAT .)
    GREATEREQUAL_STRING reduce using rule 62 (expression -> FLOAT .)
    LESS_STRING     reduce using rule 62 (expression -> FLOAT .)
    LESSEQUAL_STRING reduce using rule 62 (expression -> FLOAT .)
    COMP_STRING     reduce using rule 62 (expression -> FLOAT .)
    SEMICOLON       reduce using rule 62 (expression -> FLOAT .)
    RBRACKET        reduce using rule 62 (expression -> FLOAT .)
    AND             reduce using rule 62 (expression -> FLOAT .)
    OR              reduce using rule 62 (expression -> FLOAT .)


state 64

    (63) expression -> STRING .

    PLUS            reduce using rule 63 (expression -> STRING .)
    MINUS           reduce using rule 63 (expression -> STRING .)
    TIMES           reduce using rule 63 (expression -> STRING .)
    DIVIDE          reduce using rule 63 (expression -> STRING .)
    MODULUS         reduce using rule 63 (expression -> STRING .)
    COMMA           reduce using rule 63 (expression -> STRING .)
    RPAREN          reduce using rule 63 (expression -> STRING .)
    ISEQUAL         reduce using rule 63 (expression -> STRING .)
    NOTEQUAL        reduce using rule 63 (expression -> STRING .)
    GREATER         reduce using rule 63 (expression -> STRING .)
    GREATEREQUAL    reduce using rule 63 (expression -> STRING .)
    LESS            reduce using rule 63 (expression -> STRING .)
    LESSEQUAL       reduce using rule 63 (expression -> STRING .)
    COMP            reduce using rule 63 (expression -> STRING .)
    ISEQUAL_STRING  reduce using rule 63 (expression -> STRING .)
    NOTEQUAL_STRING reduce using rule 63 (expression -> STRING .)
    GREATER_STRING  reduce using rule 63 (expression -> STRING .)
    GREATEREQUAL_STRING reduce using rule 63 (expression -> STRING .)
    LESS_STRING     reduce using rule 63 (expression -> STRING .)
    LESSEQUAL_STRING reduce using rule 63 (expression -> STRING .)
    COMP_STRING     reduce using rule 63 (expression -> STRING .)
    SEMICOLON       reduce using rule 63 (expression -> STRING .)
    RBRACKET        reduce using rule 63 (expression -> STRING .)
    AND             reduce using rule 63 (expression -> STRING .)
    OR              reduce using rule 63 (expression -> STRING .)


state 65

    (66) expression -> DOLLAR . ID LBRACKET expression RBRACKET
    (14) var_type -> DOLLAR . ID

    ID              shift and go to state 101


state 66

    (67) expression -> var_type .

    PLUS            reduce using rule 67 (expression -> var_type .)
    MINUS           reduce using rule 67 (expression -> var_type .)
    TIMES           reduce using rule 67 (expression -> var_type .)
    DIVIDE          reduce using rule 67 (expression -> var_type .)
    MODULUS         reduce using rule 67 (expression -> var_type .)
    COMMA           reduce using rule 67 (expression -> var_type .)
    RPAREN          reduce using rule 67 (expression -> var_type .)
    ISEQUAL         reduce using rule 67 (expression -> var_type .)
    NOTEQUAL        reduce using rule 67 (expression -> var_type .)
    GREATER         reduce using rule 67 (expression -> var_type .)
    GREATEREQUAL    reduce using rule 67 (expression -> var_type .)
    LESS            reduce using rule 67 (expression -> var_type .)
    LESSEQUAL       reduce using rule 67 (expression -> var_type .)
    COMP            reduce using rule 67 (expression -> var_type .)
    ISEQUAL_STRING  reduce using rule 67 (expression -> var_type .)
    NOTEQUAL_STRING reduce using rule 67 (expression -> var_type .)
    GREATER_STRING  reduce using rule 67 (expression -> var_type .)
    GREATEREQUAL_STRING reduce using rule 67 (expression -> var_type .)
    LESS_STRING     reduce using rule 67 (expression -> var_type .)
    LESSEQUAL_STRING reduce using rule 67 (expression -> var_type .)
    COMP_STRING     reduce using rule 67 (expression -> var_type .)
    SEMICOLON       reduce using rule 67 (expression -> var_type .)
    RBRACKET        reduce using rule 67 (expression -> var_type .)
    AND             reduce using rule 67 (expression -> var_type .)
    OR              reduce using rule 67 (expression -> var_type .)


state 67

    (5) declaration -> PACKAGE ID SEMICOLON .

    USE             reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    PACKAGE         reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    SUB             reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    RETURN          reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    PRINT           reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    ID              reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    AMPERSANT       reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    IF              reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    WHILE           reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    FOR             reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    MY              reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    LPAREN          reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    DOLLAR          reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    AT              reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    PERCENT         reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    $end            reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)


state 68

    (6) declaration -> SUB ID LPAREN . param_list RPAREN LBLOCK statement_list RBLOCK
    (9) param_list -> . var_type comma_var_type
    (10) param_list -> . empty
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID
    (89) empty -> .

    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23
    RPAREN          reduce using rule 89 (empty -> .)

    param_list                     shift and go to state 102
    var_type                       shift and go to state 30
    empty                          shift and go to state 31

state 69

    (40) var_assignment -> LPAREN param_list RPAREN . assign_type LPAREN expression_list RPAREN
    (17) assign_type -> . ASSIGN
    (18) assign_type -> . PLUS_ASSIGN
    (19) assign_type -> . MINUS_ASSIGN
    (20) assign_type -> . MULTIPLY_ASSIGN
    (21) assign_type -> . DIVIDE_ASSIGN
    (22) assign_type -> . MOD_ASSIGN
    (23) assign_type -> . POW_ASSIGN

    ASSIGN          shift and go to state 43
    PLUS_ASSIGN     shift and go to state 44
    MINUS_ASSIGN    shift and go to state 45
    MULTIPLY_ASSIGN shift and go to state 46
    DIVIDE_ASSIGN   shift and go to state 47
    MOD_ASSIGN      shift and go to state 48
    POW_ASSIGN      shift and go to state 49

    assign_type                    shift and go to state 103

state 70

    (9) param_list -> var_type comma_var_type .
    (11) comma_var_type -> comma_var_type . COMMA var_type

    RPAREN          reduce using rule 9 (param_list -> var_type comma_var_type .)
    COMMA           shift and go to state 104


state 71

    (12) comma_var_type -> COMMA . var_type
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    var_type                       shift and go to state 105

state 72

    (13) comma_var_type -> empty .

    COMMA           reduce using rule 13 (comma_var_type -> empty .)
    RPAREN          reduce using rule 13 (comma_var_type -> empty .)


state 73

    (41) statement -> RETURN LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 106


state 74

    (49) statement -> AMPERSANT ID LPAREN . expression_list RPAREN
    (50) expression_list -> . expression comma_expression
    (51) expression_list -> . empty
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (89) empty -> .
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    RPAREN          reduce using rule 89 (empty -> .)
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression_list                shift and go to state 107
    expression                     shift and go to state 57
    empty                          shift and go to state 58
    var_type                       shift and go to state 66

state 75

    (42) command -> IF LPAREN relop . RPAREN LBLOCK statement_list RBLOCK
    (43) command -> IF LPAREN relop . RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (79) relop -> relop . AND relop
    (80) relop -> relop . OR relop

    RPAREN          shift and go to state 108
    AND             shift and go to state 109
    OR              shift and go to state 110


state 76

    (70) relop -> relop_number .

    RPAREN          reduce using rule 70 (relop -> relop_number .)
    AND             reduce using rule 70 (relop -> relop_number .)
    OR              reduce using rule 70 (relop -> relop_number .)
    SEMICOLON       reduce using rule 70 (relop -> relop_number .)


state 77

    (71) relop -> relop_string .

    RPAREN          reduce using rule 71 (relop -> relop_string .)
    AND             reduce using rule 71 (relop -> relop_string .)
    OR              reduce using rule 71 (relop -> relop_string .)
    SEMICOLON       reduce using rule 71 (relop -> relop_string .)


state 78

    (81) relop -> NOT . relop
    (70) relop -> . relop_number
    (71) relop -> . relop_string
    (79) relop -> . relop AND relop
    (80) relop -> . relop OR relop
    (81) relop -> . NOT relop
    (72) relop_number -> . expression ISEQUAL expression
    (73) relop_number -> . expression NOTEQUAL expression
    (74) relop_number -> . expression GREATER expression
    (75) relop_number -> . expression GREATEREQUAL expression
    (76) relop_number -> . expression LESS expression
    (77) relop_number -> . expression LESSEQUAL expression
    (78) relop_number -> . expression COMP expression
    (82) relop_string -> . expression ISEQUAL_STRING expression
    (83) relop_string -> . expression NOTEQUAL_STRING expression
    (84) relop_string -> . expression GREATER_STRING expression
    (85) relop_string -> . expression GREATEREQUAL_STRING expression
    (86) relop_string -> . expression LESS_STRING expression
    (87) relop_string -> . expression LESSEQUAL_STRING expression
    (88) relop_string -> . expression COMP_STRING expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    NOT             shift and go to state 78
    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    relop                          shift and go to state 111
    relop_number                   shift and go to state 76
    relop_string                   shift and go to state 77
    expression                     shift and go to state 79
    var_type                       shift and go to state 66

state 79

    (72) relop_number -> expression . ISEQUAL expression
    (73) relop_number -> expression . NOTEQUAL expression
    (74) relop_number -> expression . GREATER expression
    (75) relop_number -> expression . GREATEREQUAL expression
    (76) relop_number -> expression . LESS expression
    (77) relop_number -> expression . LESSEQUAL expression
    (78) relop_number -> expression . COMP expression
    (82) relop_string -> expression . ISEQUAL_STRING expression
    (83) relop_string -> expression . NOTEQUAL_STRING expression
    (84) relop_string -> expression . GREATER_STRING expression
    (85) relop_string -> expression . GREATEREQUAL_STRING expression
    (86) relop_string -> expression . LESS_STRING expression
    (87) relop_string -> expression . LESSEQUAL_STRING expression
    (88) relop_string -> expression . COMP_STRING expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    ISEQUAL         shift and go to state 112
    NOTEQUAL        shift and go to state 113
    GREATER         shift and go to state 114
    GREATEREQUAL    shift and go to state 115
    LESS            shift and go to state 116
    LESSEQUAL       shift and go to state 117
    COMP            shift and go to state 118
    ISEQUAL_STRING  shift and go to state 119
    NOTEQUAL_STRING shift and go to state 120
    GREATER_STRING  shift and go to state 121
    GREATEREQUAL_STRING shift and go to state 122
    LESS_STRING     shift and go to state 123
    LESSEQUAL_STRING shift and go to state 124
    COMP_STRING     shift and go to state 125
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 80

    (45) command -> WHILE LPAREN relop . RPAREN LBLOCK statement_list RBLOCK
    (79) relop -> relop . AND relop
    (80) relop -> relop . OR relop

    RPAREN          shift and go to state 126
    AND             shift and go to state 109
    OR              shift and go to state 110


state 81

    (46) command -> FOR LPAREN var_declaration . SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK

    SEMICOLON       shift and go to state 127


state 82

    (47) command -> FOR LPAREN var_assignment . SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK

    SEMICOLON       shift and go to state 128


state 83

    (32) var_declaration -> MY var_type assign_type . expression
    (35) var_declaration -> MY var_type assign_type . LPAREN expression_list RPAREN
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    LPAREN          shift and go to state 130
    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    var_type                       shift and go to state 66
    expression                     shift and go to state 129

state 84

    (33) var_declaration -> MY LPAREN param_list . RPAREN
    (34) var_declaration -> MY LPAREN param_list . RPAREN assign_type expression
    (36) var_declaration -> MY LPAREN param_list . RPAREN assign_type LPAREN expression_list RPAREN

    RPAREN          shift and go to state 131


state 85

    (37) var_assignment -> var_type assign_type expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    SEMICOLON       reduce using rule 37 (var_assignment -> var_type assign_type expression .)
    RPAREN          reduce using rule 37 (var_assignment -> var_type assign_type expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 86

    (39) var_assignment -> var_type assign_type LPAREN . expression_list RPAREN
    (64) expression -> LPAREN . expression RPAREN
    (50) expression_list -> . expression comma_expression
    (51) expression_list -> . empty
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (89) empty -> .
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    RPAREN          reduce using rule 89 (empty -> .)
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    var_type                       shift and go to state 66
    expression_list                shift and go to state 132
    expression                     shift and go to state 133
    empty                          shift and go to state 58

state 87

    (38) var_assignment -> var_type LBRACKET expression . RBRACKET assign_type expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RBRACKET        shift and go to state 134
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 88

    (65) expression -> ID LPAREN . expression_list RPAREN
    (50) expression_list -> . expression comma_expression
    (51) expression_list -> . empty
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (89) empty -> .
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    RPAREN          reduce using rule 89 (empty -> .)
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression_list                shift and go to state 135
    expression                     shift and go to state 57
    empty                          shift and go to state 58
    var_type                       shift and go to state 66

state 89

    (64) expression -> LPAREN expression . RPAREN
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RPAREN          shift and go to state 136
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 90

    (48) statement -> ID LPAREN expression_list RPAREN .

    SEMICOLON       reduce using rule 48 (statement -> ID LPAREN expression_list RPAREN .)


state 91

    (50) expression_list -> expression comma_expression .
    (52) comma_expression -> comma_expression . COMMA expression

    RPAREN          reduce using rule 50 (expression_list -> expression comma_expression .)
    COMMA           shift and go to state 137


state 92

    (55) expression -> expression PLUS . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 138
    var_type                       shift and go to state 66

state 93

    (56) expression -> expression MINUS . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 139
    var_type                       shift and go to state 66

state 94

    (57) expression -> expression TIMES . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 140
    var_type                       shift and go to state 66

state 95

    (58) expression -> expression DIVIDE . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 141
    var_type                       shift and go to state 66

state 96

    (59) expression -> expression MODULUS . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 142
    var_type                       shift and go to state 66

state 97

    (53) comma_expression -> COMMA . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 143
    var_type                       shift and go to state 66

state 98

    (54) comma_expression -> empty .

    COMMA           reduce using rule 54 (comma_expression -> empty .)
    RPAREN          reduce using rule 54 (comma_expression -> empty .)


state 99

    (69) expression -> PLUS expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    PLUS            reduce using rule 69 (expression -> PLUS expression .)
    MINUS           reduce using rule 69 (expression -> PLUS expression .)
    TIMES           reduce using rule 69 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 69 (expression -> PLUS expression .)
    MODULUS         reduce using rule 69 (expression -> PLUS expression .)
    COMMA           reduce using rule 69 (expression -> PLUS expression .)
    RPAREN          reduce using rule 69 (expression -> PLUS expression .)
    ISEQUAL         reduce using rule 69 (expression -> PLUS expression .)
    NOTEQUAL        reduce using rule 69 (expression -> PLUS expression .)
    GREATER         reduce using rule 69 (expression -> PLUS expression .)
    GREATEREQUAL    reduce using rule 69 (expression -> PLUS expression .)
    LESS            reduce using rule 69 (expression -> PLUS expression .)
    LESSEQUAL       reduce using rule 69 (expression -> PLUS expression .)
    COMP            reduce using rule 69 (expression -> PLUS expression .)
    ISEQUAL_STRING  reduce using rule 69 (expression -> PLUS expression .)
    NOTEQUAL_STRING reduce using rule 69 (expression -> PLUS expression .)
    GREATER_STRING  reduce using rule 69 (expression -> PLUS expression .)
    GREATEREQUAL_STRING reduce using rule 69 (expression -> PLUS expression .)
    LESS_STRING     reduce using rule 69 (expression -> PLUS expression .)
    LESSEQUAL_STRING reduce using rule 69 (expression -> PLUS expression .)
    COMP_STRING     reduce using rule 69 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 69 (expression -> PLUS expression .)
    RBRACKET        reduce using rule 69 (expression -> PLUS expression .)
    AND             reduce using rule 69 (expression -> PLUS expression .)
    OR              reduce using rule 69 (expression -> PLUS expression .)

  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! TIMES           [ shift and go to state 94 ]
  ! DIVIDE          [ shift and go to state 95 ]
  ! MODULUS         [ shift and go to state 96 ]


state 100

    (68) expression -> MINUS expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    PLUS            reduce using rule 68 (expression -> MINUS expression .)
    MINUS           reduce using rule 68 (expression -> MINUS expression .)
    TIMES           reduce using rule 68 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 68 (expression -> MINUS expression .)
    MODULUS         reduce using rule 68 (expression -> MINUS expression .)
    COMMA           reduce using rule 68 (expression -> MINUS expression .)
    RPAREN          reduce using rule 68 (expression -> MINUS expression .)
    ISEQUAL         reduce using rule 68 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 68 (expression -> MINUS expression .)
    GREATER         reduce using rule 68 (expression -> MINUS expression .)
    GREATEREQUAL    reduce using rule 68 (expression -> MINUS expression .)
    LESS            reduce using rule 68 (expression -> MINUS expression .)
    LESSEQUAL       reduce using rule 68 (expression -> MINUS expression .)
    COMP            reduce using rule 68 (expression -> MINUS expression .)
    ISEQUAL_STRING  reduce using rule 68 (expression -> MINUS expression .)
    NOTEQUAL_STRING reduce using rule 68 (expression -> MINUS expression .)
    GREATER_STRING  reduce using rule 68 (expression -> MINUS expression .)
    GREATEREQUAL_STRING reduce using rule 68 (expression -> MINUS expression .)
    LESS_STRING     reduce using rule 68 (expression -> MINUS expression .)
    LESSEQUAL_STRING reduce using rule 68 (expression -> MINUS expression .)
    COMP_STRING     reduce using rule 68 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 68 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 68 (expression -> MINUS expression .)
    AND             reduce using rule 68 (expression -> MINUS expression .)
    OR              reduce using rule 68 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! TIMES           [ shift and go to state 94 ]
  ! DIVIDE          [ shift and go to state 95 ]
  ! MODULUS         [ shift and go to state 96 ]


state 101

    (66) expression -> DOLLAR ID . LBRACKET expression RBRACKET
    (14) var_type -> DOLLAR ID .

    LBRACKET        shift and go to state 144
    PLUS            reduce using rule 14 (var_type -> DOLLAR ID .)
    MINUS           reduce using rule 14 (var_type -> DOLLAR ID .)
    TIMES           reduce using rule 14 (var_type -> DOLLAR ID .)
    DIVIDE          reduce using rule 14 (var_type -> DOLLAR ID .)
    MODULUS         reduce using rule 14 (var_type -> DOLLAR ID .)
    COMMA           reduce using rule 14 (var_type -> DOLLAR ID .)
    RPAREN          reduce using rule 14 (var_type -> DOLLAR ID .)
    ISEQUAL         reduce using rule 14 (var_type -> DOLLAR ID .)
    NOTEQUAL        reduce using rule 14 (var_type -> DOLLAR ID .)
    GREATER         reduce using rule 14 (var_type -> DOLLAR ID .)
    GREATEREQUAL    reduce using rule 14 (var_type -> DOLLAR ID .)
    LESS            reduce using rule 14 (var_type -> DOLLAR ID .)
    LESSEQUAL       reduce using rule 14 (var_type -> DOLLAR ID .)
    COMP            reduce using rule 14 (var_type -> DOLLAR ID .)
    ISEQUAL_STRING  reduce using rule 14 (var_type -> DOLLAR ID .)
    NOTEQUAL_STRING reduce using rule 14 (var_type -> DOLLAR ID .)
    GREATER_STRING  reduce using rule 14 (var_type -> DOLLAR ID .)
    GREATEREQUAL_STRING reduce using rule 14 (var_type -> DOLLAR ID .)
    LESS_STRING     reduce using rule 14 (var_type -> DOLLAR ID .)
    LESSEQUAL_STRING reduce using rule 14 (var_type -> DOLLAR ID .)
    COMP_STRING     reduce using rule 14 (var_type -> DOLLAR ID .)
    SEMICOLON       reduce using rule 14 (var_type -> DOLLAR ID .)
    RBRACKET        reduce using rule 14 (var_type -> DOLLAR ID .)
    AND             reduce using rule 14 (var_type -> DOLLAR ID .)
    OR              reduce using rule 14 (var_type -> DOLLAR ID .)


state 102

    (6) declaration -> SUB ID LPAREN param_list . RPAREN LBLOCK statement_list RBLOCK

    RPAREN          shift and go to state 145


state 103

    (40) var_assignment -> LPAREN param_list RPAREN assign_type . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 146


state 104

    (11) comma_var_type -> comma_var_type COMMA . var_type
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    var_type                       shift and go to state 147

state 105

    (12) comma_var_type -> COMMA var_type .

    COMMA           reduce using rule 12 (comma_var_type -> COMMA var_type .)
    RPAREN          reduce using rule 12 (comma_var_type -> COMMA var_type .)


state 106

    (41) statement -> RETURN LPAREN expression_list RPAREN .

    SEMICOLON       reduce using rule 41 (statement -> RETURN LPAREN expression_list RPAREN .)


state 107

    (49) statement -> AMPERSANT ID LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 148


state 108

    (42) command -> IF LPAREN relop RPAREN . LBLOCK statement_list RBLOCK
    (43) command -> IF LPAREN relop RPAREN . LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK

    LBLOCK          shift and go to state 149


state 109

    (79) relop -> relop AND . relop
    (70) relop -> . relop_number
    (71) relop -> . relop_string
    (79) relop -> . relop AND relop
    (80) relop -> . relop OR relop
    (81) relop -> . NOT relop
    (72) relop_number -> . expression ISEQUAL expression
    (73) relop_number -> . expression NOTEQUAL expression
    (74) relop_number -> . expression GREATER expression
    (75) relop_number -> . expression GREATEREQUAL expression
    (76) relop_number -> . expression LESS expression
    (77) relop_number -> . expression LESSEQUAL expression
    (78) relop_number -> . expression COMP expression
    (82) relop_string -> . expression ISEQUAL_STRING expression
    (83) relop_string -> . expression NOTEQUAL_STRING expression
    (84) relop_string -> . expression GREATER_STRING expression
    (85) relop_string -> . expression GREATEREQUAL_STRING expression
    (86) relop_string -> . expression LESS_STRING expression
    (87) relop_string -> . expression LESSEQUAL_STRING expression
    (88) relop_string -> . expression COMP_STRING expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    NOT             shift and go to state 78
    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    relop                          shift and go to state 150
    relop_number                   shift and go to state 76
    relop_string                   shift and go to state 77
    expression                     shift and go to state 79
    var_type                       shift and go to state 66

state 110

    (80) relop -> relop OR . relop
    (70) relop -> . relop_number
    (71) relop -> . relop_string
    (79) relop -> . relop AND relop
    (80) relop -> . relop OR relop
    (81) relop -> . NOT relop
    (72) relop_number -> . expression ISEQUAL expression
    (73) relop_number -> . expression NOTEQUAL expression
    (74) relop_number -> . expression GREATER expression
    (75) relop_number -> . expression GREATEREQUAL expression
    (76) relop_number -> . expression LESS expression
    (77) relop_number -> . expression LESSEQUAL expression
    (78) relop_number -> . expression COMP expression
    (82) relop_string -> . expression ISEQUAL_STRING expression
    (83) relop_string -> . expression NOTEQUAL_STRING expression
    (84) relop_string -> . expression GREATER_STRING expression
    (85) relop_string -> . expression GREATEREQUAL_STRING expression
    (86) relop_string -> . expression LESS_STRING expression
    (87) relop_string -> . expression LESSEQUAL_STRING expression
    (88) relop_string -> . expression COMP_STRING expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    NOT             shift and go to state 78
    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    relop                          shift and go to state 151
    relop_number                   shift and go to state 76
    relop_string                   shift and go to state 77
    expression                     shift and go to state 79
    var_type                       shift and go to state 66

state 111

    (81) relop -> NOT relop .
    (79) relop -> relop . AND relop
    (80) relop -> relop . OR relop

    RPAREN          reduce using rule 81 (relop -> NOT relop .)
    AND             reduce using rule 81 (relop -> NOT relop .)
    OR              reduce using rule 81 (relop -> NOT relop .)
    SEMICOLON       reduce using rule 81 (relop -> NOT relop .)

  ! AND             [ shift and go to state 109 ]
  ! OR              [ shift and go to state 110 ]


state 112

    (72) relop_number -> expression ISEQUAL . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 152
    var_type                       shift and go to state 66

state 113

    (73) relop_number -> expression NOTEQUAL . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 153
    var_type                       shift and go to state 66

state 114

    (74) relop_number -> expression GREATER . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 154
    var_type                       shift and go to state 66

state 115

    (75) relop_number -> expression GREATEREQUAL . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 155
    var_type                       shift and go to state 66

state 116

    (76) relop_number -> expression LESS . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 156
    var_type                       shift and go to state 66

state 117

    (77) relop_number -> expression LESSEQUAL . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 157
    var_type                       shift and go to state 66

state 118

    (78) relop_number -> expression COMP . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 158
    var_type                       shift and go to state 66

state 119

    (82) relop_string -> expression ISEQUAL_STRING . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 159
    var_type                       shift and go to state 66

state 120

    (83) relop_string -> expression NOTEQUAL_STRING . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 160
    var_type                       shift and go to state 66

state 121

    (84) relop_string -> expression GREATER_STRING . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 161
    var_type                       shift and go to state 66

state 122

    (85) relop_string -> expression GREATEREQUAL_STRING . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 162
    var_type                       shift and go to state 66

state 123

    (86) relop_string -> expression LESS_STRING . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 163
    var_type                       shift and go to state 66

state 124

    (87) relop_string -> expression LESSEQUAL_STRING . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 164
    var_type                       shift and go to state 66

state 125

    (88) relop_string -> expression COMP_STRING . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 165
    var_type                       shift and go to state 66

state 126

    (45) command -> WHILE LPAREN relop RPAREN . LBLOCK statement_list RBLOCK

    LBLOCK          shift and go to state 166


state 127

    (46) command -> FOR LPAREN var_declaration SEMICOLON . relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (70) relop -> . relop_number
    (71) relop -> . relop_string
    (79) relop -> . relop AND relop
    (80) relop -> . relop OR relop
    (81) relop -> . NOT relop
    (72) relop_number -> . expression ISEQUAL expression
    (73) relop_number -> . expression NOTEQUAL expression
    (74) relop_number -> . expression GREATER expression
    (75) relop_number -> . expression GREATEREQUAL expression
    (76) relop_number -> . expression LESS expression
    (77) relop_number -> . expression LESSEQUAL expression
    (78) relop_number -> . expression COMP expression
    (82) relop_string -> . expression ISEQUAL_STRING expression
    (83) relop_string -> . expression NOTEQUAL_STRING expression
    (84) relop_string -> . expression GREATER_STRING expression
    (85) relop_string -> . expression GREATEREQUAL_STRING expression
    (86) relop_string -> . expression LESS_STRING expression
    (87) relop_string -> . expression LESSEQUAL_STRING expression
    (88) relop_string -> . expression COMP_STRING expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    NOT             shift and go to state 78
    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    relop                          shift and go to state 167
    relop_number                   shift and go to state 76
    relop_string                   shift and go to state 77
    expression                     shift and go to state 79
    var_type                       shift and go to state 66

state 128

    (47) command -> FOR LPAREN var_assignment SEMICOLON . relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (70) relop -> . relop_number
    (71) relop -> . relop_string
    (79) relop -> . relop AND relop
    (80) relop -> . relop OR relop
    (81) relop -> . NOT relop
    (72) relop_number -> . expression ISEQUAL expression
    (73) relop_number -> . expression NOTEQUAL expression
    (74) relop_number -> . expression GREATER expression
    (75) relop_number -> . expression GREATEREQUAL expression
    (76) relop_number -> . expression LESS expression
    (77) relop_number -> . expression LESSEQUAL expression
    (78) relop_number -> . expression COMP expression
    (82) relop_string -> . expression ISEQUAL_STRING expression
    (83) relop_string -> . expression NOTEQUAL_STRING expression
    (84) relop_string -> . expression GREATER_STRING expression
    (85) relop_string -> . expression GREATEREQUAL_STRING expression
    (86) relop_string -> . expression LESS_STRING expression
    (87) relop_string -> . expression LESSEQUAL_STRING expression
    (88) relop_string -> . expression COMP_STRING expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    NOT             shift and go to state 78
    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    relop                          shift and go to state 168
    relop_number                   shift and go to state 76
    relop_string                   shift and go to state 77
    expression                     shift and go to state 79
    var_type                       shift and go to state 66

state 129

    (32) var_declaration -> MY var_type assign_type expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    SEMICOLON       reduce using rule 32 (var_declaration -> MY var_type assign_type expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 130

    (35) var_declaration -> MY var_type assign_type LPAREN . expression_list RPAREN
    (64) expression -> LPAREN . expression RPAREN
    (50) expression_list -> . expression comma_expression
    (51) expression_list -> . empty
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (89) empty -> .
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    RPAREN          reduce using rule 89 (empty -> .)
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    var_type                       shift and go to state 66
    expression_list                shift and go to state 169
    expression                     shift and go to state 133
    empty                          shift and go to state 58

state 131

    (33) var_declaration -> MY LPAREN param_list RPAREN .
    (34) var_declaration -> MY LPAREN param_list RPAREN . assign_type expression
    (36) var_declaration -> MY LPAREN param_list RPAREN . assign_type LPAREN expression_list RPAREN
    (17) assign_type -> . ASSIGN
    (18) assign_type -> . PLUS_ASSIGN
    (19) assign_type -> . MINUS_ASSIGN
    (20) assign_type -> . MULTIPLY_ASSIGN
    (21) assign_type -> . DIVIDE_ASSIGN
    (22) assign_type -> . MOD_ASSIGN
    (23) assign_type -> . POW_ASSIGN

    SEMICOLON       reduce using rule 33 (var_declaration -> MY LPAREN param_list RPAREN .)
    ASSIGN          shift and go to state 43
    PLUS_ASSIGN     shift and go to state 44
    MINUS_ASSIGN    shift and go to state 45
    MULTIPLY_ASSIGN shift and go to state 46
    DIVIDE_ASSIGN   shift and go to state 47
    MOD_ASSIGN      shift and go to state 48
    POW_ASSIGN      shift and go to state 49

    assign_type                    shift and go to state 170

state 132

    (39) var_assignment -> var_type assign_type LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 171


state 133

    (64) expression -> LPAREN expression . RPAREN
    (50) expression_list -> expression . comma_expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression
    (52) comma_expression -> . comma_expression COMMA expression
    (53) comma_expression -> . COMMA expression
    (54) comma_expression -> . empty
    (89) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 136
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96
    COMMA           shift and go to state 97

  ! COMMA           [ reduce using rule 89 (empty -> .) ]
  ! RPAREN          [ reduce using rule 89 (empty -> .) ]

    comma_expression               shift and go to state 91
    empty                          shift and go to state 98

state 134

    (38) var_assignment -> var_type LBRACKET expression RBRACKET . assign_type expression
    (17) assign_type -> . ASSIGN
    (18) assign_type -> . PLUS_ASSIGN
    (19) assign_type -> . MINUS_ASSIGN
    (20) assign_type -> . MULTIPLY_ASSIGN
    (21) assign_type -> . DIVIDE_ASSIGN
    (22) assign_type -> . MOD_ASSIGN
    (23) assign_type -> . POW_ASSIGN

    ASSIGN          shift and go to state 43
    PLUS_ASSIGN     shift and go to state 44
    MINUS_ASSIGN    shift and go to state 45
    MULTIPLY_ASSIGN shift and go to state 46
    DIVIDE_ASSIGN   shift and go to state 47
    MOD_ASSIGN      shift and go to state 48
    POW_ASSIGN      shift and go to state 49

    assign_type                    shift and go to state 172

state 135

    (65) expression -> ID LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 173


state 136

    (64) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    MODULUS         reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    COMP            reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    ISEQUAL_STRING  reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL_STRING reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    GREATER_STRING  reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    GREATEREQUAL_STRING reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    LESS_STRING     reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    LESSEQUAL_STRING reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    COMP_STRING     reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 64 (expression -> LPAREN expression RPAREN .)


state 137

    (52) comma_expression -> comma_expression COMMA . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 174
    var_type                       shift and go to state 66

state 138

    (55) expression -> expression PLUS expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    PLUS            reduce using rule 55 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 55 (expression -> expression PLUS expression .)
    MODULUS         reduce using rule 55 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 55 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 55 (expression -> expression PLUS expression .)
    ISEQUAL         reduce using rule 55 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 55 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 55 (expression -> expression PLUS expression .)
    GREATEREQUAL    reduce using rule 55 (expression -> expression PLUS expression .)
    LESS            reduce using rule 55 (expression -> expression PLUS expression .)
    LESSEQUAL       reduce using rule 55 (expression -> expression PLUS expression .)
    COMP            reduce using rule 55 (expression -> expression PLUS expression .)
    ISEQUAL_STRING  reduce using rule 55 (expression -> expression PLUS expression .)
    NOTEQUAL_STRING reduce using rule 55 (expression -> expression PLUS expression .)
    GREATER_STRING  reduce using rule 55 (expression -> expression PLUS expression .)
    GREATEREQUAL_STRING reduce using rule 55 (expression -> expression PLUS expression .)
    LESS_STRING     reduce using rule 55 (expression -> expression PLUS expression .)
    LESSEQUAL_STRING reduce using rule 55 (expression -> expression PLUS expression .)
    COMP_STRING     reduce using rule 55 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 55 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 55 (expression -> expression PLUS expression .)
    AND             reduce using rule 55 (expression -> expression PLUS expression .)
    OR              reduce using rule 55 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95

  ! TIMES           [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! MODULUS         [ shift and go to state 96 ]


state 139

    (56) expression -> expression MINUS expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    PLUS            reduce using rule 56 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 56 (expression -> expression MINUS expression .)
    MODULUS         reduce using rule 56 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 56 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 56 (expression -> expression MINUS expression .)
    ISEQUAL         reduce using rule 56 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 56 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 56 (expression -> expression MINUS expression .)
    GREATEREQUAL    reduce using rule 56 (expression -> expression MINUS expression .)
    LESS            reduce using rule 56 (expression -> expression MINUS expression .)
    LESSEQUAL       reduce using rule 56 (expression -> expression MINUS expression .)
    COMP            reduce using rule 56 (expression -> expression MINUS expression .)
    ISEQUAL_STRING  reduce using rule 56 (expression -> expression MINUS expression .)
    NOTEQUAL_STRING reduce using rule 56 (expression -> expression MINUS expression .)
    GREATER_STRING  reduce using rule 56 (expression -> expression MINUS expression .)
    GREATEREQUAL_STRING reduce using rule 56 (expression -> expression MINUS expression .)
    LESS_STRING     reduce using rule 56 (expression -> expression MINUS expression .)
    LESSEQUAL_STRING reduce using rule 56 (expression -> expression MINUS expression .)
    COMP_STRING     reduce using rule 56 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 56 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 56 (expression -> expression MINUS expression .)
    AND             reduce using rule 56 (expression -> expression MINUS expression .)
    OR              reduce using rule 56 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95

  ! TIMES           [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! MODULUS         [ shift and go to state 96 ]


state 140

    (57) expression -> expression TIMES expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    PLUS            reduce using rule 57 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 57 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 57 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 57 (expression -> expression TIMES expression .)
    MODULUS         reduce using rule 57 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 57 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 57 (expression -> expression TIMES expression .)
    ISEQUAL         reduce using rule 57 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 57 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 57 (expression -> expression TIMES expression .)
    GREATEREQUAL    reduce using rule 57 (expression -> expression TIMES expression .)
    LESS            reduce using rule 57 (expression -> expression TIMES expression .)
    LESSEQUAL       reduce using rule 57 (expression -> expression TIMES expression .)
    COMP            reduce using rule 57 (expression -> expression TIMES expression .)
    ISEQUAL_STRING  reduce using rule 57 (expression -> expression TIMES expression .)
    NOTEQUAL_STRING reduce using rule 57 (expression -> expression TIMES expression .)
    GREATER_STRING  reduce using rule 57 (expression -> expression TIMES expression .)
    GREATEREQUAL_STRING reduce using rule 57 (expression -> expression TIMES expression .)
    LESS_STRING     reduce using rule 57 (expression -> expression TIMES expression .)
    LESSEQUAL_STRING reduce using rule 57 (expression -> expression TIMES expression .)
    COMP_STRING     reduce using rule 57 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 57 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 57 (expression -> expression TIMES expression .)
    AND             reduce using rule 57 (expression -> expression TIMES expression .)
    OR              reduce using rule 57 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! TIMES           [ shift and go to state 94 ]
  ! DIVIDE          [ shift and go to state 95 ]
  ! MODULUS         [ shift and go to state 96 ]


state 141

    (58) expression -> expression DIVIDE expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    PLUS            reduce using rule 58 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 58 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 58 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 58 (expression -> expression DIVIDE expression .)
    MODULUS         reduce using rule 58 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 58 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 58 (expression -> expression DIVIDE expression .)
    ISEQUAL         reduce using rule 58 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 58 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 58 (expression -> expression DIVIDE expression .)
    GREATEREQUAL    reduce using rule 58 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 58 (expression -> expression DIVIDE expression .)
    LESSEQUAL       reduce using rule 58 (expression -> expression DIVIDE expression .)
    COMP            reduce using rule 58 (expression -> expression DIVIDE expression .)
    ISEQUAL_STRING  reduce using rule 58 (expression -> expression DIVIDE expression .)
    NOTEQUAL_STRING reduce using rule 58 (expression -> expression DIVIDE expression .)
    GREATER_STRING  reduce using rule 58 (expression -> expression DIVIDE expression .)
    GREATEREQUAL_STRING reduce using rule 58 (expression -> expression DIVIDE expression .)
    LESS_STRING     reduce using rule 58 (expression -> expression DIVIDE expression .)
    LESSEQUAL_STRING reduce using rule 58 (expression -> expression DIVIDE expression .)
    COMP_STRING     reduce using rule 58 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 58 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 58 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 58 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 58 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! TIMES           [ shift and go to state 94 ]
  ! DIVIDE          [ shift and go to state 95 ]
  ! MODULUS         [ shift and go to state 96 ]


state 142

    (59) expression -> expression MODULUS expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
    COMMA           reduce using rule 59 (expression -> expression MODULUS expression .)
    RPAREN          reduce using rule 59 (expression -> expression MODULUS expression .)
    ISEQUAL         reduce using rule 59 (expression -> expression MODULUS expression .)
    NOTEQUAL        reduce using rule 59 (expression -> expression MODULUS expression .)
    GREATER         reduce using rule 59 (expression -> expression MODULUS expression .)
    GREATEREQUAL    reduce using rule 59 (expression -> expression MODULUS expression .)
    LESS            reduce using rule 59 (expression -> expression MODULUS expression .)
    LESSEQUAL       reduce using rule 59 (expression -> expression MODULUS expression .)
    COMP            reduce using rule 59 (expression -> expression MODULUS expression .)
    ISEQUAL_STRING  reduce using rule 59 (expression -> expression MODULUS expression .)
    NOTEQUAL_STRING reduce using rule 59 (expression -> expression MODULUS expression .)
    GREATER_STRING  reduce using rule 59 (expression -> expression MODULUS expression .)
    GREATEREQUAL_STRING reduce using rule 59 (expression -> expression MODULUS expression .)
    LESS_STRING     reduce using rule 59 (expression -> expression MODULUS expression .)
    LESSEQUAL_STRING reduce using rule 59 (expression -> expression MODULUS expression .)
    COMP_STRING     reduce using rule 59 (expression -> expression MODULUS expression .)
    SEMICOLON       reduce using rule 59 (expression -> expression MODULUS expression .)
    RBRACKET        reduce using rule 59 (expression -> expression MODULUS expression .)
    AND             reduce using rule 59 (expression -> expression MODULUS expression .)
    OR              reduce using rule 59 (expression -> expression MODULUS expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96

  ! PLUS            [ reduce using rule 59 (expression -> expression MODULUS expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression MODULUS expression .) ]
  ! TIMES           [ reduce using rule 59 (expression -> expression MODULUS expression .) ]
  ! DIVIDE          [ reduce using rule 59 (expression -> expression MODULUS expression .) ]
  ! MODULUS         [ reduce using rule 59 (expression -> expression MODULUS expression .) ]


state 143

    (53) comma_expression -> COMMA expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    COMMA           reduce using rule 53 (comma_expression -> COMMA expression .)
    RPAREN          reduce using rule 53 (comma_expression -> COMMA expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 144

    (66) expression -> DOLLAR ID LBRACKET . expression RBRACKET
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 175
    var_type                       shift and go to state 66

state 145

    (6) declaration -> SUB ID LPAREN param_list RPAREN . LBLOCK statement_list RBLOCK

    LBLOCK          shift and go to state 176


state 146

    (40) var_assignment -> LPAREN param_list RPAREN assign_type LPAREN . expression_list RPAREN
    (50) expression_list -> . expression comma_expression
    (51) expression_list -> . empty
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (89) empty -> .
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    RPAREN          reduce using rule 89 (empty -> .)
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression_list                shift and go to state 177
    expression                     shift and go to state 57
    empty                          shift and go to state 58
    var_type                       shift and go to state 66

state 147

    (11) comma_var_type -> comma_var_type COMMA var_type .

    COMMA           reduce using rule 11 (comma_var_type -> comma_var_type COMMA var_type .)
    RPAREN          reduce using rule 11 (comma_var_type -> comma_var_type COMMA var_type .)


state 148

    (49) statement -> AMPERSANT ID LPAREN expression_list RPAREN .

    SEMICOLON       reduce using rule 49 (statement -> AMPERSANT ID LPAREN expression_list RPAREN .)


state 149

    (42) command -> IF LPAREN relop RPAREN LBLOCK . statement_list RBLOCK
    (43) command -> IF LPAREN relop RPAREN LBLOCK . statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (24) statement_list -> . statement_list statement SEMICOLON
    (25) statement_list -> . statement SEMICOLON
    (26) statement_list -> . empty
    (27) statement_list -> . statement_list command
    (28) statement_list -> . command
    (29) statement -> . var_declaration
    (30) statement -> . var_assignment
    (41) statement -> . RETURN LPAREN expression_list RPAREN
    (44) statement -> . PRINT STRING
    (48) statement -> . ID LPAREN expression_list RPAREN
    (49) statement -> . AMPERSANT ID LPAREN expression_list RPAREN
    (89) empty -> .
    (42) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (45) command -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (46) command -> . FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> . FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (31) var_declaration -> . MY var_type
    (32) var_declaration -> . MY var_type assign_type expression
    (33) var_declaration -> . MY LPAREN param_list RPAREN
    (34) var_declaration -> . MY LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> . MY var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> . MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for MY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 5
    AMPERSANT       shift and go to state 15
    RBLOCK          reduce using rule 89 (empty -> .)
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    MY              shift and go to state 19
    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

  ! RETURN          [ reduce using rule 89 (empty -> .) ]
  ! PRINT           [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 89 (empty -> .) ]
  ! IF              [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]
  ! FOR             [ reduce using rule 89 (empty -> .) ]
  ! MY              [ reduce using rule 89 (empty -> .) ]
  ! LPAREN          [ reduce using rule 89 (empty -> .) ]
  ! DOLLAR          [ reduce using rule 89 (empty -> .) ]
  ! AT              [ reduce using rule 89 (empty -> .) ]
  ! PERCENT         [ reduce using rule 89 (empty -> .) ]

    statement_list                 shift and go to state 178
    statement                      shift and go to state 179
    empty                          shift and go to state 180
    command                        shift and go to state 181
    var_declaration                shift and go to state 11
    var_assignment                 shift and go to state 12
    var_type                       shift and go to state 20

state 150

    (79) relop -> relop AND relop .
    (79) relop -> relop . AND relop
    (80) relop -> relop . OR relop

    RPAREN          reduce using rule 79 (relop -> relop AND relop .)
    AND             reduce using rule 79 (relop -> relop AND relop .)
    OR              reduce using rule 79 (relop -> relop AND relop .)
    SEMICOLON       reduce using rule 79 (relop -> relop AND relop .)

  ! AND             [ shift and go to state 109 ]
  ! OR              [ shift and go to state 110 ]


state 151

    (80) relop -> relop OR relop .
    (79) relop -> relop . AND relop
    (80) relop -> relop . OR relop

    RPAREN          reduce using rule 80 (relop -> relop OR relop .)
    OR              reduce using rule 80 (relop -> relop OR relop .)
    SEMICOLON       reduce using rule 80 (relop -> relop OR relop .)
    AND             shift and go to state 109

  ! AND             [ reduce using rule 80 (relop -> relop OR relop .) ]
  ! OR              [ shift and go to state 110 ]


state 152

    (72) relop_number -> expression ISEQUAL expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RPAREN          reduce using rule 72 (relop_number -> expression ISEQUAL expression .)
    AND             reduce using rule 72 (relop_number -> expression ISEQUAL expression .)
    OR              reduce using rule 72 (relop_number -> expression ISEQUAL expression .)
    SEMICOLON       reduce using rule 72 (relop_number -> expression ISEQUAL expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 153

    (73) relop_number -> expression NOTEQUAL expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RPAREN          reduce using rule 73 (relop_number -> expression NOTEQUAL expression .)
    AND             reduce using rule 73 (relop_number -> expression NOTEQUAL expression .)
    OR              reduce using rule 73 (relop_number -> expression NOTEQUAL expression .)
    SEMICOLON       reduce using rule 73 (relop_number -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 154

    (74) relop_number -> expression GREATER expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RPAREN          reduce using rule 74 (relop_number -> expression GREATER expression .)
    AND             reduce using rule 74 (relop_number -> expression GREATER expression .)
    OR              reduce using rule 74 (relop_number -> expression GREATER expression .)
    SEMICOLON       reduce using rule 74 (relop_number -> expression GREATER expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 155

    (75) relop_number -> expression GREATEREQUAL expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RPAREN          reduce using rule 75 (relop_number -> expression GREATEREQUAL expression .)
    AND             reduce using rule 75 (relop_number -> expression GREATEREQUAL expression .)
    OR              reduce using rule 75 (relop_number -> expression GREATEREQUAL expression .)
    SEMICOLON       reduce using rule 75 (relop_number -> expression GREATEREQUAL expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 156

    (76) relop_number -> expression LESS expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RPAREN          reduce using rule 76 (relop_number -> expression LESS expression .)
    AND             reduce using rule 76 (relop_number -> expression LESS expression .)
    OR              reduce using rule 76 (relop_number -> expression LESS expression .)
    SEMICOLON       reduce using rule 76 (relop_number -> expression LESS expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 157

    (77) relop_number -> expression LESSEQUAL expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RPAREN          reduce using rule 77 (relop_number -> expression LESSEQUAL expression .)
    AND             reduce using rule 77 (relop_number -> expression LESSEQUAL expression .)
    OR              reduce using rule 77 (relop_number -> expression LESSEQUAL expression .)
    SEMICOLON       reduce using rule 77 (relop_number -> expression LESSEQUAL expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 158

    (78) relop_number -> expression COMP expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RPAREN          reduce using rule 78 (relop_number -> expression COMP expression .)
    AND             reduce using rule 78 (relop_number -> expression COMP expression .)
    OR              reduce using rule 78 (relop_number -> expression COMP expression .)
    SEMICOLON       reduce using rule 78 (relop_number -> expression COMP expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 159

    (82) relop_string -> expression ISEQUAL_STRING expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RPAREN          reduce using rule 82 (relop_string -> expression ISEQUAL_STRING expression .)
    AND             reduce using rule 82 (relop_string -> expression ISEQUAL_STRING expression .)
    OR              reduce using rule 82 (relop_string -> expression ISEQUAL_STRING expression .)
    SEMICOLON       reduce using rule 82 (relop_string -> expression ISEQUAL_STRING expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 160

    (83) relop_string -> expression NOTEQUAL_STRING expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RPAREN          reduce using rule 83 (relop_string -> expression NOTEQUAL_STRING expression .)
    AND             reduce using rule 83 (relop_string -> expression NOTEQUAL_STRING expression .)
    OR              reduce using rule 83 (relop_string -> expression NOTEQUAL_STRING expression .)
    SEMICOLON       reduce using rule 83 (relop_string -> expression NOTEQUAL_STRING expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 161

    (84) relop_string -> expression GREATER_STRING expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RPAREN          reduce using rule 84 (relop_string -> expression GREATER_STRING expression .)
    AND             reduce using rule 84 (relop_string -> expression GREATER_STRING expression .)
    OR              reduce using rule 84 (relop_string -> expression GREATER_STRING expression .)
    SEMICOLON       reduce using rule 84 (relop_string -> expression GREATER_STRING expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 162

    (85) relop_string -> expression GREATEREQUAL_STRING expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RPAREN          reduce using rule 85 (relop_string -> expression GREATEREQUAL_STRING expression .)
    AND             reduce using rule 85 (relop_string -> expression GREATEREQUAL_STRING expression .)
    OR              reduce using rule 85 (relop_string -> expression GREATEREQUAL_STRING expression .)
    SEMICOLON       reduce using rule 85 (relop_string -> expression GREATEREQUAL_STRING expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 163

    (86) relop_string -> expression LESS_STRING expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RPAREN          reduce using rule 86 (relop_string -> expression LESS_STRING expression .)
    AND             reduce using rule 86 (relop_string -> expression LESS_STRING expression .)
    OR              reduce using rule 86 (relop_string -> expression LESS_STRING expression .)
    SEMICOLON       reduce using rule 86 (relop_string -> expression LESS_STRING expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 164

    (87) relop_string -> expression LESSEQUAL_STRING expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RPAREN          reduce using rule 87 (relop_string -> expression LESSEQUAL_STRING expression .)
    AND             reduce using rule 87 (relop_string -> expression LESSEQUAL_STRING expression .)
    OR              reduce using rule 87 (relop_string -> expression LESSEQUAL_STRING expression .)
    SEMICOLON       reduce using rule 87 (relop_string -> expression LESSEQUAL_STRING expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 165

    (88) relop_string -> expression COMP_STRING expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RPAREN          reduce using rule 88 (relop_string -> expression COMP_STRING expression .)
    AND             reduce using rule 88 (relop_string -> expression COMP_STRING expression .)
    OR              reduce using rule 88 (relop_string -> expression COMP_STRING expression .)
    SEMICOLON       reduce using rule 88 (relop_string -> expression COMP_STRING expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 166

    (45) command -> WHILE LPAREN relop RPAREN LBLOCK . statement_list RBLOCK
    (24) statement_list -> . statement_list statement SEMICOLON
    (25) statement_list -> . statement SEMICOLON
    (26) statement_list -> . empty
    (27) statement_list -> . statement_list command
    (28) statement_list -> . command
    (29) statement -> . var_declaration
    (30) statement -> . var_assignment
    (41) statement -> . RETURN LPAREN expression_list RPAREN
    (44) statement -> . PRINT STRING
    (48) statement -> . ID LPAREN expression_list RPAREN
    (49) statement -> . AMPERSANT ID LPAREN expression_list RPAREN
    (89) empty -> .
    (42) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (45) command -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (46) command -> . FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> . FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (31) var_declaration -> . MY var_type
    (32) var_declaration -> . MY var_type assign_type expression
    (33) var_declaration -> . MY LPAREN param_list RPAREN
    (34) var_declaration -> . MY LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> . MY var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> . MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for MY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 5
    AMPERSANT       shift and go to state 15
    RBLOCK          reduce using rule 89 (empty -> .)
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    MY              shift and go to state 19
    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

  ! RETURN          [ reduce using rule 89 (empty -> .) ]
  ! PRINT           [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 89 (empty -> .) ]
  ! IF              [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]
  ! FOR             [ reduce using rule 89 (empty -> .) ]
  ! MY              [ reduce using rule 89 (empty -> .) ]
  ! LPAREN          [ reduce using rule 89 (empty -> .) ]
  ! DOLLAR          [ reduce using rule 89 (empty -> .) ]
  ! AT              [ reduce using rule 89 (empty -> .) ]
  ! PERCENT         [ reduce using rule 89 (empty -> .) ]

    statement_list                 shift and go to state 182
    statement                      shift and go to state 179
    empty                          shift and go to state 180
    command                        shift and go to state 181
    var_declaration                shift and go to state 11
    var_assignment                 shift and go to state 12
    var_type                       shift and go to state 20

state 167

    (46) command -> FOR LPAREN var_declaration SEMICOLON relop . SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (79) relop -> relop . AND relop
    (80) relop -> relop . OR relop

    SEMICOLON       shift and go to state 183
    AND             shift and go to state 109
    OR              shift and go to state 110


state 168

    (47) command -> FOR LPAREN var_assignment SEMICOLON relop . SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (79) relop -> relop . AND relop
    (80) relop -> relop . OR relop

    SEMICOLON       shift and go to state 184
    AND             shift and go to state 109
    OR              shift and go to state 110


state 169

    (35) var_declaration -> MY var_type assign_type LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 185


state 170

    (34) var_declaration -> MY LPAREN param_list RPAREN assign_type . expression
    (36) var_declaration -> MY LPAREN param_list RPAREN assign_type . LPAREN expression_list RPAREN
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    LPAREN          shift and go to state 186
    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression                     shift and go to state 187
    var_type                       shift and go to state 66

state 171

    (39) var_assignment -> var_type assign_type LPAREN expression_list RPAREN .

    SEMICOLON       reduce using rule 39 (var_assignment -> var_type assign_type LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 39 (var_assignment -> var_type assign_type LPAREN expression_list RPAREN .)


state 172

    (38) var_assignment -> var_type LBRACKET expression RBRACKET assign_type . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    var_type                       shift and go to state 66
    expression                     shift and go to state 188

state 173

    (65) expression -> ID LPAREN expression_list RPAREN .

    PLUS            reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    MODULUS         reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    ISEQUAL         reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    NOTEQUAL        reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    GREATER         reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    GREATEREQUAL    reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    LESS            reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    LESSEQUAL       reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    COMP            reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    ISEQUAL_STRING  reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    NOTEQUAL_STRING reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    GREATER_STRING  reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    GREATEREQUAL_STRING reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    LESS_STRING     reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    LESSEQUAL_STRING reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    COMP_STRING     reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    SEMICOLON       reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    AND             reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)
    OR              reduce using rule 65 (expression -> ID LPAREN expression_list RPAREN .)


state 174

    (52) comma_expression -> comma_expression COMMA expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    COMMA           reduce using rule 52 (comma_expression -> comma_expression COMMA expression .)
    RPAREN          reduce using rule 52 (comma_expression -> comma_expression COMMA expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 175

    (66) expression -> DOLLAR ID LBRACKET expression . RBRACKET
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    RBRACKET        shift and go to state 189
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 176

    (6) declaration -> SUB ID LPAREN param_list RPAREN LBLOCK . statement_list RBLOCK
    (24) statement_list -> . statement_list statement SEMICOLON
    (25) statement_list -> . statement SEMICOLON
    (26) statement_list -> . empty
    (27) statement_list -> . statement_list command
    (28) statement_list -> . command
    (29) statement -> . var_declaration
    (30) statement -> . var_assignment
    (41) statement -> . RETURN LPAREN expression_list RPAREN
    (44) statement -> . PRINT STRING
    (48) statement -> . ID LPAREN expression_list RPAREN
    (49) statement -> . AMPERSANT ID LPAREN expression_list RPAREN
    (89) empty -> .
    (42) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (45) command -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (46) command -> . FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> . FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (31) var_declaration -> . MY var_type
    (32) var_declaration -> . MY var_type assign_type expression
    (33) var_declaration -> . MY LPAREN param_list RPAREN
    (34) var_declaration -> . MY LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> . MY var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> . MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for MY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 5
    AMPERSANT       shift and go to state 15
    RBLOCK          reduce using rule 89 (empty -> .)
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    MY              shift and go to state 19
    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

  ! RETURN          [ reduce using rule 89 (empty -> .) ]
  ! PRINT           [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 89 (empty -> .) ]
  ! IF              [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]
  ! FOR             [ reduce using rule 89 (empty -> .) ]
  ! MY              [ reduce using rule 89 (empty -> .) ]
  ! LPAREN          [ reduce using rule 89 (empty -> .) ]
  ! DOLLAR          [ reduce using rule 89 (empty -> .) ]
  ! AT              [ reduce using rule 89 (empty -> .) ]
  ! PERCENT         [ reduce using rule 89 (empty -> .) ]

    statement_list                 shift and go to state 190
    statement                      shift and go to state 179
    empty                          shift and go to state 180
    command                        shift and go to state 181
    var_declaration                shift and go to state 11
    var_assignment                 shift and go to state 12
    var_type                       shift and go to state 20

state 177

    (40) var_assignment -> LPAREN param_list RPAREN assign_type LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 191


state 178

    (42) command -> IF LPAREN relop RPAREN LBLOCK statement_list . RBLOCK
    (43) command -> IF LPAREN relop RPAREN LBLOCK statement_list . RBLOCK ELSE LBLOCK statement_list RBLOCK
    (24) statement_list -> statement_list . statement SEMICOLON
    (27) statement_list -> statement_list . command
    (29) statement -> . var_declaration
    (30) statement -> . var_assignment
    (41) statement -> . RETURN LPAREN expression_list RPAREN
    (44) statement -> . PRINT STRING
    (48) statement -> . ID LPAREN expression_list RPAREN
    (49) statement -> . AMPERSANT ID LPAREN expression_list RPAREN
    (42) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (45) command -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (46) command -> . FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> . FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (31) var_declaration -> . MY var_type
    (32) var_declaration -> . MY var_type assign_type expression
    (33) var_declaration -> . MY LPAREN param_list RPAREN
    (34) var_declaration -> . MY LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> . MY var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> . MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    RBLOCK          shift and go to state 192
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 5
    AMPERSANT       shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    MY              shift and go to state 19
    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    statement                      shift and go to state 193
    command                        shift and go to state 194
    var_declaration                shift and go to state 11
    var_assignment                 shift and go to state 12
    var_type                       shift and go to state 20

state 179

    (25) statement_list -> statement . SEMICOLON

    SEMICOLON       shift and go to state 195


state 180

    (26) statement_list -> empty .

    RBLOCK          reduce using rule 26 (statement_list -> empty .)
    RETURN          reduce using rule 26 (statement_list -> empty .)
    PRINT           reduce using rule 26 (statement_list -> empty .)
    ID              reduce using rule 26 (statement_list -> empty .)
    AMPERSANT       reduce using rule 26 (statement_list -> empty .)
    IF              reduce using rule 26 (statement_list -> empty .)
    WHILE           reduce using rule 26 (statement_list -> empty .)
    FOR             reduce using rule 26 (statement_list -> empty .)
    MY              reduce using rule 26 (statement_list -> empty .)
    LPAREN          reduce using rule 26 (statement_list -> empty .)
    DOLLAR          reduce using rule 26 (statement_list -> empty .)
    AT              reduce using rule 26 (statement_list -> empty .)
    PERCENT         reduce using rule 26 (statement_list -> empty .)


state 181

    (28) statement_list -> command .

    RBLOCK          reduce using rule 28 (statement_list -> command .)
    RETURN          reduce using rule 28 (statement_list -> command .)
    PRINT           reduce using rule 28 (statement_list -> command .)
    ID              reduce using rule 28 (statement_list -> command .)
    AMPERSANT       reduce using rule 28 (statement_list -> command .)
    IF              reduce using rule 28 (statement_list -> command .)
    WHILE           reduce using rule 28 (statement_list -> command .)
    FOR             reduce using rule 28 (statement_list -> command .)
    MY              reduce using rule 28 (statement_list -> command .)
    LPAREN          reduce using rule 28 (statement_list -> command .)
    DOLLAR          reduce using rule 28 (statement_list -> command .)
    AT              reduce using rule 28 (statement_list -> command .)
    PERCENT         reduce using rule 28 (statement_list -> command .)


state 182

    (45) command -> WHILE LPAREN relop RPAREN LBLOCK statement_list . RBLOCK
    (24) statement_list -> statement_list . statement SEMICOLON
    (27) statement_list -> statement_list . command
    (29) statement -> . var_declaration
    (30) statement -> . var_assignment
    (41) statement -> . RETURN LPAREN expression_list RPAREN
    (44) statement -> . PRINT STRING
    (48) statement -> . ID LPAREN expression_list RPAREN
    (49) statement -> . AMPERSANT ID LPAREN expression_list RPAREN
    (42) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (45) command -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (46) command -> . FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> . FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (31) var_declaration -> . MY var_type
    (32) var_declaration -> . MY var_type assign_type expression
    (33) var_declaration -> . MY LPAREN param_list RPAREN
    (34) var_declaration -> . MY LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> . MY var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> . MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    RBLOCK          shift and go to state 196
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 5
    AMPERSANT       shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    MY              shift and go to state 19
    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    statement                      shift and go to state 193
    command                        shift and go to state 194
    var_declaration                shift and go to state 11
    var_assignment                 shift and go to state 12
    var_type                       shift and go to state 20

state 183

    (46) command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON . var_assignment RPAREN LBLOCK statement_list RBLOCK
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    var_assignment                 shift and go to state 197
    var_type                       shift and go to state 20

state 184

    (47) command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON . var_assignment RPAREN LBLOCK statement_list RBLOCK
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    var_assignment                 shift and go to state 198
    var_type                       shift and go to state 20

state 185

    (35) var_declaration -> MY var_type assign_type LPAREN expression_list RPAREN .

    SEMICOLON       reduce using rule 35 (var_declaration -> MY var_type assign_type LPAREN expression_list RPAREN .)


state 186

    (36) var_declaration -> MY LPAREN param_list RPAREN assign_type LPAREN . expression_list RPAREN
    (64) expression -> LPAREN . expression RPAREN
    (50) expression_list -> . expression comma_expression
    (51) expression_list -> . empty
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULUS expression
    (60) expression -> . INTEGER
    (61) expression -> . HEX
    (62) expression -> . FLOAT
    (63) expression -> . STRING
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . ID LPAREN expression_list RPAREN
    (66) expression -> . DOLLAR ID LBRACKET expression RBRACKET
    (67) expression -> . var_type
    (68) expression -> . MINUS expression
    (69) expression -> . PLUS expression
    (89) empty -> .
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    INTEGER         shift and go to state 61
    HEX             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    LPAREN          shift and go to state 55
    ID              shift and go to state 54
    DOLLAR          shift and go to state 65
    MINUS           shift and go to state 60
    PLUS            shift and go to state 59
    RPAREN          reduce using rule 89 (empty -> .)
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    expression_list                shift and go to state 199
    expression                     shift and go to state 133
    empty                          shift and go to state 58
    var_type                       shift and go to state 66

state 187

    (34) var_declaration -> MY LPAREN param_list RPAREN assign_type expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    SEMICOLON       reduce using rule 34 (var_declaration -> MY LPAREN param_list RPAREN assign_type expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 188

    (38) var_assignment -> var_type LBRACKET expression RBRACKET assign_type expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULUS expression

    SEMICOLON       reduce using rule 38 (var_assignment -> var_type LBRACKET expression RBRACKET assign_type expression .)
    RPAREN          reduce using rule 38 (var_assignment -> var_type LBRACKET expression RBRACKET assign_type expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULUS         shift and go to state 96


state 189

    (66) expression -> DOLLAR ID LBRACKET expression RBRACKET .

    PLUS            reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    MODULUS         reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    ISEQUAL         reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    NOTEQUAL        reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    LESS            reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    COMP            reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    ISEQUAL_STRING  reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    NOTEQUAL_STRING reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    GREATER_STRING  reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    GREATEREQUAL_STRING reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    LESS_STRING     reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    LESSEQUAL_STRING reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    COMP_STRING     reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    AND             reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)
    OR              reduce using rule 66 (expression -> DOLLAR ID LBRACKET expression RBRACKET .)


state 190

    (6) declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list . RBLOCK
    (24) statement_list -> statement_list . statement SEMICOLON
    (27) statement_list -> statement_list . command
    (29) statement -> . var_declaration
    (30) statement -> . var_assignment
    (41) statement -> . RETURN LPAREN expression_list RPAREN
    (44) statement -> . PRINT STRING
    (48) statement -> . ID LPAREN expression_list RPAREN
    (49) statement -> . AMPERSANT ID LPAREN expression_list RPAREN
    (42) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (45) command -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (46) command -> . FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> . FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (31) var_declaration -> . MY var_type
    (32) var_declaration -> . MY var_type assign_type expression
    (33) var_declaration -> . MY LPAREN param_list RPAREN
    (34) var_declaration -> . MY LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> . MY var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> . MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    RBLOCK          shift and go to state 200
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 5
    AMPERSANT       shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    MY              shift and go to state 19
    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    statement                      shift and go to state 193
    command                        shift and go to state 194
    var_declaration                shift and go to state 11
    var_assignment                 shift and go to state 12
    var_type                       shift and go to state 20

state 191

    (40) var_assignment -> LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN .

    SEMICOLON       reduce using rule 40 (var_assignment -> LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 40 (var_assignment -> LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN .)


state 192

    (42) command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .
    (43) command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK . ELSE LBLOCK statement_list RBLOCK

    USE             reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    PACKAGE         reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    SUB             reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    RETURN          reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    PRINT           reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    ID              reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    AMPERSANT       reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    IF              reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    WHILE           reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    FOR             reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    MY              reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    LPAREN          reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    DOLLAR          reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    AT              reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    PERCENT         reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    $end            reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    RBLOCK          reduce using rule 42 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    ELSE            shift and go to state 201


state 193

    (24) statement_list -> statement_list statement . SEMICOLON

    SEMICOLON       shift and go to state 202


state 194

    (27) statement_list -> statement_list command .

    RBLOCK          reduce using rule 27 (statement_list -> statement_list command .)
    RETURN          reduce using rule 27 (statement_list -> statement_list command .)
    PRINT           reduce using rule 27 (statement_list -> statement_list command .)
    ID              reduce using rule 27 (statement_list -> statement_list command .)
    AMPERSANT       reduce using rule 27 (statement_list -> statement_list command .)
    IF              reduce using rule 27 (statement_list -> statement_list command .)
    WHILE           reduce using rule 27 (statement_list -> statement_list command .)
    FOR             reduce using rule 27 (statement_list -> statement_list command .)
    MY              reduce using rule 27 (statement_list -> statement_list command .)
    LPAREN          reduce using rule 27 (statement_list -> statement_list command .)
    DOLLAR          reduce using rule 27 (statement_list -> statement_list command .)
    AT              reduce using rule 27 (statement_list -> statement_list command .)
    PERCENT         reduce using rule 27 (statement_list -> statement_list command .)


state 195

    (25) statement_list -> statement SEMICOLON .

    RBLOCK          reduce using rule 25 (statement_list -> statement SEMICOLON .)
    RETURN          reduce using rule 25 (statement_list -> statement SEMICOLON .)
    PRINT           reduce using rule 25 (statement_list -> statement SEMICOLON .)
    ID              reduce using rule 25 (statement_list -> statement SEMICOLON .)
    AMPERSANT       reduce using rule 25 (statement_list -> statement SEMICOLON .)
    IF              reduce using rule 25 (statement_list -> statement SEMICOLON .)
    WHILE           reduce using rule 25 (statement_list -> statement SEMICOLON .)
    FOR             reduce using rule 25 (statement_list -> statement SEMICOLON .)
    MY              reduce using rule 25 (statement_list -> statement SEMICOLON .)
    LPAREN          reduce using rule 25 (statement_list -> statement SEMICOLON .)
    DOLLAR          reduce using rule 25 (statement_list -> statement SEMICOLON .)
    AT              reduce using rule 25 (statement_list -> statement SEMICOLON .)
    PERCENT         reduce using rule 25 (statement_list -> statement SEMICOLON .)


state 196

    (45) command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .

    USE             reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    PACKAGE         reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    SUB             reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    RETURN          reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    PRINT           reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    ID              reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    AMPERSANT       reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    IF              reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    WHILE           reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    FOR             reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    MY              reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    LPAREN          reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    DOLLAR          reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    AT              reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    PERCENT         reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    $end            reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    RBLOCK          reduce using rule 45 (command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)


state 197

    (46) command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment . RPAREN LBLOCK statement_list RBLOCK

    RPAREN          shift and go to state 203


state 198

    (47) command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment . RPAREN LBLOCK statement_list RBLOCK

    RPAREN          shift and go to state 204


state 199

    (36) var_declaration -> MY LPAREN param_list RPAREN assign_type LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 205


state 200

    (6) declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .

    USE             reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    PACKAGE         reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    SUB             reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    RETURN          reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    PRINT           reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    ID              reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    AMPERSANT       reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    IF              reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    WHILE           reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    FOR             reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    MY              reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    LPAREN          reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    DOLLAR          reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    AT              reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    PERCENT         reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    $end            reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)


state 201

    (43) command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE . LBLOCK statement_list RBLOCK

    LBLOCK          shift and go to state 206


state 202

    (24) statement_list -> statement_list statement SEMICOLON .

    RBLOCK          reduce using rule 24 (statement_list -> statement_list statement SEMICOLON .)
    RETURN          reduce using rule 24 (statement_list -> statement_list statement SEMICOLON .)
    PRINT           reduce using rule 24 (statement_list -> statement_list statement SEMICOLON .)
    ID              reduce using rule 24 (statement_list -> statement_list statement SEMICOLON .)
    AMPERSANT       reduce using rule 24 (statement_list -> statement_list statement SEMICOLON .)
    IF              reduce using rule 24 (statement_list -> statement_list statement SEMICOLON .)
    WHILE           reduce using rule 24 (statement_list -> statement_list statement SEMICOLON .)
    FOR             reduce using rule 24 (statement_list -> statement_list statement SEMICOLON .)
    MY              reduce using rule 24 (statement_list -> statement_list statement SEMICOLON .)
    LPAREN          reduce using rule 24 (statement_list -> statement_list statement SEMICOLON .)
    DOLLAR          reduce using rule 24 (statement_list -> statement_list statement SEMICOLON .)
    AT              reduce using rule 24 (statement_list -> statement_list statement SEMICOLON .)
    PERCENT         reduce using rule 24 (statement_list -> statement_list statement SEMICOLON .)


state 203

    (46) command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN . LBLOCK statement_list RBLOCK

    LBLOCK          shift and go to state 207


state 204

    (47) command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN . LBLOCK statement_list RBLOCK

    LBLOCK          shift and go to state 208


state 205

    (36) var_declaration -> MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN .

    SEMICOLON       reduce using rule 36 (var_declaration -> MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN .)


state 206

    (43) command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK . statement_list RBLOCK
    (24) statement_list -> . statement_list statement SEMICOLON
    (25) statement_list -> . statement SEMICOLON
    (26) statement_list -> . empty
    (27) statement_list -> . statement_list command
    (28) statement_list -> . command
    (29) statement -> . var_declaration
    (30) statement -> . var_assignment
    (41) statement -> . RETURN LPAREN expression_list RPAREN
    (44) statement -> . PRINT STRING
    (48) statement -> . ID LPAREN expression_list RPAREN
    (49) statement -> . AMPERSANT ID LPAREN expression_list RPAREN
    (89) empty -> .
    (42) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (45) command -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (46) command -> . FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> . FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (31) var_declaration -> . MY var_type
    (32) var_declaration -> . MY var_type assign_type expression
    (33) var_declaration -> . MY LPAREN param_list RPAREN
    (34) var_declaration -> . MY LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> . MY var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> . MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for MY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 5
    AMPERSANT       shift and go to state 15
    RBLOCK          reduce using rule 89 (empty -> .)
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    MY              shift and go to state 19
    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

  ! RETURN          [ reduce using rule 89 (empty -> .) ]
  ! PRINT           [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 89 (empty -> .) ]
  ! IF              [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]
  ! FOR             [ reduce using rule 89 (empty -> .) ]
  ! MY              [ reduce using rule 89 (empty -> .) ]
  ! LPAREN          [ reduce using rule 89 (empty -> .) ]
  ! DOLLAR          [ reduce using rule 89 (empty -> .) ]
  ! AT              [ reduce using rule 89 (empty -> .) ]
  ! PERCENT         [ reduce using rule 89 (empty -> .) ]

    statement_list                 shift and go to state 209
    statement                      shift and go to state 179
    empty                          shift and go to state 180
    command                        shift and go to state 181
    var_declaration                shift and go to state 11
    var_assignment                 shift and go to state 12
    var_type                       shift and go to state 20

state 207

    (46) command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK . statement_list RBLOCK
    (24) statement_list -> . statement_list statement SEMICOLON
    (25) statement_list -> . statement SEMICOLON
    (26) statement_list -> . empty
    (27) statement_list -> . statement_list command
    (28) statement_list -> . command
    (29) statement -> . var_declaration
    (30) statement -> . var_assignment
    (41) statement -> . RETURN LPAREN expression_list RPAREN
    (44) statement -> . PRINT STRING
    (48) statement -> . ID LPAREN expression_list RPAREN
    (49) statement -> . AMPERSANT ID LPAREN expression_list RPAREN
    (89) empty -> .
    (42) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (45) command -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (46) command -> . FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> . FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (31) var_declaration -> . MY var_type
    (32) var_declaration -> . MY var_type assign_type expression
    (33) var_declaration -> . MY LPAREN param_list RPAREN
    (34) var_declaration -> . MY LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> . MY var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> . MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for MY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 5
    AMPERSANT       shift and go to state 15
    RBLOCK          reduce using rule 89 (empty -> .)
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    MY              shift and go to state 19
    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

  ! RETURN          [ reduce using rule 89 (empty -> .) ]
  ! PRINT           [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 89 (empty -> .) ]
  ! IF              [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]
  ! FOR             [ reduce using rule 89 (empty -> .) ]
  ! MY              [ reduce using rule 89 (empty -> .) ]
  ! LPAREN          [ reduce using rule 89 (empty -> .) ]
  ! DOLLAR          [ reduce using rule 89 (empty -> .) ]
  ! AT              [ reduce using rule 89 (empty -> .) ]
  ! PERCENT         [ reduce using rule 89 (empty -> .) ]

    var_declaration                shift and go to state 11
    var_assignment                 shift and go to state 12
    statement_list                 shift and go to state 210
    statement                      shift and go to state 179
    empty                          shift and go to state 180
    command                        shift and go to state 181
    var_type                       shift and go to state 20

state 208

    (47) command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK . statement_list RBLOCK
    (24) statement_list -> . statement_list statement SEMICOLON
    (25) statement_list -> . statement SEMICOLON
    (26) statement_list -> . empty
    (27) statement_list -> . statement_list command
    (28) statement_list -> . command
    (29) statement -> . var_declaration
    (30) statement -> . var_assignment
    (41) statement -> . RETURN LPAREN expression_list RPAREN
    (44) statement -> . PRINT STRING
    (48) statement -> . ID LPAREN expression_list RPAREN
    (49) statement -> . AMPERSANT ID LPAREN expression_list RPAREN
    (89) empty -> .
    (42) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (45) command -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (46) command -> . FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> . FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (31) var_declaration -> . MY var_type
    (32) var_declaration -> . MY var_type assign_type expression
    (33) var_declaration -> . MY LPAREN param_list RPAREN
    (34) var_declaration -> . MY LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> . MY var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> . MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for MY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 5
    AMPERSANT       shift and go to state 15
    RBLOCK          reduce using rule 89 (empty -> .)
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    MY              shift and go to state 19
    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

  ! RETURN          [ reduce using rule 89 (empty -> .) ]
  ! PRINT           [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 89 (empty -> .) ]
  ! IF              [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]
  ! FOR             [ reduce using rule 89 (empty -> .) ]
  ! MY              [ reduce using rule 89 (empty -> .) ]
  ! LPAREN          [ reduce using rule 89 (empty -> .) ]
  ! DOLLAR          [ reduce using rule 89 (empty -> .) ]
  ! AT              [ reduce using rule 89 (empty -> .) ]
  ! PERCENT         [ reduce using rule 89 (empty -> .) ]

    var_assignment                 shift and go to state 12
    statement_list                 shift and go to state 211
    statement                      shift and go to state 179
    empty                          shift and go to state 180
    command                        shift and go to state 181
    var_declaration                shift and go to state 11
    var_type                       shift and go to state 20

state 209

    (43) command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list . RBLOCK
    (24) statement_list -> statement_list . statement SEMICOLON
    (27) statement_list -> statement_list . command
    (29) statement -> . var_declaration
    (30) statement -> . var_assignment
    (41) statement -> . RETURN LPAREN expression_list RPAREN
    (44) statement -> . PRINT STRING
    (48) statement -> . ID LPAREN expression_list RPAREN
    (49) statement -> . AMPERSANT ID LPAREN expression_list RPAREN
    (42) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (45) command -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (46) command -> . FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> . FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (31) var_declaration -> . MY var_type
    (32) var_declaration -> . MY var_type assign_type expression
    (33) var_declaration -> . MY LPAREN param_list RPAREN
    (34) var_declaration -> . MY LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> . MY var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> . MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    RBLOCK          shift and go to state 212
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 5
    AMPERSANT       shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    MY              shift and go to state 19
    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    statement                      shift and go to state 193
    command                        shift and go to state 194
    var_declaration                shift and go to state 11
    var_assignment                 shift and go to state 12
    var_type                       shift and go to state 20

state 210

    (46) command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list . RBLOCK
    (24) statement_list -> statement_list . statement SEMICOLON
    (27) statement_list -> statement_list . command
    (29) statement -> . var_declaration
    (30) statement -> . var_assignment
    (41) statement -> . RETURN LPAREN expression_list RPAREN
    (44) statement -> . PRINT STRING
    (48) statement -> . ID LPAREN expression_list RPAREN
    (49) statement -> . AMPERSANT ID LPAREN expression_list RPAREN
    (42) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (45) command -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (46) command -> . FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> . FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (31) var_declaration -> . MY var_type
    (32) var_declaration -> . MY var_type assign_type expression
    (33) var_declaration -> . MY LPAREN param_list RPAREN
    (34) var_declaration -> . MY LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> . MY var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> . MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    RBLOCK          shift and go to state 213
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 5
    AMPERSANT       shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    MY              shift and go to state 19
    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    var_declaration                shift and go to state 11
    var_assignment                 shift and go to state 12
    statement                      shift and go to state 193
    command                        shift and go to state 194
    var_type                       shift and go to state 20

state 211

    (47) command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list . RBLOCK
    (24) statement_list -> statement_list . statement SEMICOLON
    (27) statement_list -> statement_list . command
    (29) statement -> . var_declaration
    (30) statement -> . var_assignment
    (41) statement -> . RETURN LPAREN expression_list RPAREN
    (44) statement -> . PRINT STRING
    (48) statement -> . ID LPAREN expression_list RPAREN
    (49) statement -> . AMPERSANT ID LPAREN expression_list RPAREN
    (42) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (43) command -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (45) command -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (46) command -> . FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (47) command -> . FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK
    (31) var_declaration -> . MY var_type
    (32) var_declaration -> . MY var_type assign_type expression
    (33) var_declaration -> . MY LPAREN param_list RPAREN
    (34) var_declaration -> . MY LPAREN param_list RPAREN assign_type expression
    (35) var_declaration -> . MY var_type assign_type LPAREN expression_list RPAREN
    (36) var_declaration -> . MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (37) var_assignment -> . var_type assign_type expression
    (38) var_assignment -> . var_type LBRACKET expression RBRACKET assign_type expression
    (39) var_assignment -> . var_type assign_type LPAREN expression_list RPAREN
    (40) var_assignment -> . LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN
    (14) var_type -> . DOLLAR ID
    (15) var_type -> . AT ID
    (16) var_type -> . PERCENT ID

    RBLOCK          shift and go to state 214
    RETURN          shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 5
    AMPERSANT       shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    MY              shift and go to state 19
    LPAREN          shift and go to state 8
    DOLLAR          shift and go to state 21
    AT              shift and go to state 22
    PERCENT         shift and go to state 23

    var_assignment                 shift and go to state 12
    statement                      shift and go to state 193
    command                        shift and go to state 194
    var_declaration                shift and go to state 11
    var_type                       shift and go to state 20

state 212

    (43) command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .

    USE             reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    PACKAGE         reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    SUB             reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    RETURN          reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    PRINT           reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    ID              reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    AMPERSANT       reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    IF              reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    WHILE           reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    FOR             reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    MY              reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    LPAREN          reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    DOLLAR          reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    AT              reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    PERCENT         reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    $end            reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)
    RBLOCK          reduce using rule 43 (command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)


state 213

    (46) command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .

    USE             reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    PACKAGE         reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    SUB             reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    RETURN          reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    PRINT           reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    ID              reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    AMPERSANT       reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    IF              reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    WHILE           reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    FOR             reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    MY              reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    LPAREN          reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    DOLLAR          reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    AT              reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    PERCENT         reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    $end            reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    RBLOCK          reduce using rule 46 (command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)


state 214

    (47) command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .

    USE             reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    PACKAGE         reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    SUB             reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    RETURN          reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    PRINT           reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    ID              reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    AMPERSANT       reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    IF              reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    WHILE           reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    FOR             reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    MY              reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    LPAREN          reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    DOLLAR          reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    AT              reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    PERCENT         reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    $end            reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)
    RBLOCK          reduce using rule 47 (command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 30 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 57 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 133 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 133 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 142 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 142 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 142 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 142 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 142 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 149 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 149 resolved as shift
WARNING: shift/reduce conflict for ID in state 149 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 149 resolved as shift
WARNING: shift/reduce conflict for IF in state 149 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 149 resolved as shift
WARNING: shift/reduce conflict for FOR in state 149 resolved as shift
WARNING: shift/reduce conflict for MY in state 149 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 149 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 149 resolved as shift
WARNING: shift/reduce conflict for AT in state 149 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 149 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 166 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 166 resolved as shift
WARNING: shift/reduce conflict for ID in state 166 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 166 resolved as shift
WARNING: shift/reduce conflict for IF in state 166 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 166 resolved as shift
WARNING: shift/reduce conflict for FOR in state 166 resolved as shift
WARNING: shift/reduce conflict for MY in state 166 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 166 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 166 resolved as shift
WARNING: shift/reduce conflict for AT in state 166 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 166 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 176 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 176 resolved as shift
WARNING: shift/reduce conflict for ID in state 176 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 176 resolved as shift
WARNING: shift/reduce conflict for IF in state 176 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 176 resolved as shift
WARNING: shift/reduce conflict for FOR in state 176 resolved as shift
WARNING: shift/reduce conflict for MY in state 176 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 176 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 176 resolved as shift
WARNING: shift/reduce conflict for AT in state 176 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 176 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 206 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 206 resolved as shift
WARNING: shift/reduce conflict for ID in state 206 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 206 resolved as shift
WARNING: shift/reduce conflict for IF in state 206 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 206 resolved as shift
WARNING: shift/reduce conflict for FOR in state 206 resolved as shift
WARNING: shift/reduce conflict for MY in state 206 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 206 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 206 resolved as shift
WARNING: shift/reduce conflict for AT in state 206 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 206 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 207 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 207 resolved as shift
WARNING: shift/reduce conflict for ID in state 207 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 207 resolved as shift
WARNING: shift/reduce conflict for IF in state 207 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 207 resolved as shift
WARNING: shift/reduce conflict for FOR in state 207 resolved as shift
WARNING: shift/reduce conflict for MY in state 207 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 207 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 207 resolved as shift
WARNING: shift/reduce conflict for AT in state 207 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 207 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 208 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 208 resolved as shift
WARNING: shift/reduce conflict for ID in state 208 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 208 resolved as shift
WARNING: shift/reduce conflict for IF in state 208 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 208 resolved as shift
WARNING: shift/reduce conflict for FOR in state 208 resolved as shift
WARNING: shift/reduce conflict for MY in state 208 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 208 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 208 resolved as shift
WARNING: shift/reduce conflict for AT in state 208 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 208 resolved as shift
